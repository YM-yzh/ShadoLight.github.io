<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>光</title>
      <link href="//2016/1006/guang/"/>
      <url>//2016/1006/guang/</url>
      <content type="html"><![CDATA[<h1 id="光-guang"><a href="#光-guang" class="headerlink" title="光(guang)"></a>光(guang)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>小 S 对神的高傲感到了厌烦,她把神域改造成了一个微型世界,这个世界有 n 个关键点,有 m 条边连接这 n 个关键点,其中每条边都有一个光的通过时间,小 S 会进行测试,将一道圣光沿某条最短的路径从 1 传播到 n,每条边上的微型生命都想看到圣光,他们想知道至少将这条边的光的通过时间缩短多少才能保证看到圣光(此时他们不会考虑其它边的变化).</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行两个正整数 n 和 m.接下来 m 行每行三个正整数 u,v,w,表示这条边从 u 指向 v,原先的通过时间为 w.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>m 行,依次给出每条边的答案,注意缩短的时间必须是整数且缩短后的值必须为正,如果这条边上的人一定见不到圣光则输出-1.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>guang.in</th><th>guang.out</th></tr></thead><tbody><tr><td>3 3</td><td>0</td></tr><tr><td>1 3 2</td><td>2</td></tr><tr><td>1 3 3</td><td>-1</td></tr><tr><td>2 3 1</td><td></td></tr></tbody></table><ul><li><h3 id="样例解释"><a href="#样例解释" class="headerlink" title="[样例解释]"></a>[样例解释]</h3><blockquote><p>边 u=1,v=3,w=2 就是 1 到 3 的最短路,所以缩短的时间为 0;边 u=1,v=3,w=3 必须把 w 缩短 2 后变成 1 才是 1 到 3 的最短路;边 u=2,v=3,w=1 无论 w 怎么缩短都不会变成 1 到 3 的最短路,所以输出-1.</p></blockquote></li><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>60%的数据:n≤100;<br>80%的数据:n≤1000;<br>100%的数据:n≤10000,w≤10<sup>9</sup>;</p></blockquote></li></ul>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>神</title>
      <link href="//2016/1006/shen/"/>
      <url>//2016/1006/shen/</url>
      <content type="html"><![CDATA[<h1 id="神-shen"><a href="#神-shen" class="headerlink" title="神(shen)"></a>神(shen)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>击败恶魔后,小 S 发现了一片 n*n 的神域,神是高傲的,他们总是斜着站且不希望自己的左右或前方有其它的神,现在小 S 想知道这片神域里最多能存在多少个神.下图是一个示例,S 位置是一个面朝右上的神,S 和 X 的位置不能再放其它的神,注意神一定是斜着的.</p></blockquote></li></ul><a id="more"></a><p><img src="../../../images/shen.png" alt="shen"></p><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行一个正整数 T 表示测试数据组数.接下来 T 行每行一个正整数 n.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>对每组数据输出一行一个整数表示答案.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>shen.in</th><th>shen.out</th></tr></thead><tbody><tr><td>1</td><td>4</td></tr><tr><td>2</td><td></td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>20%的数据:n≤4;<br>40%的数据:n≤5;<br>60%的数据:n≤6;<br>80%的数据:n≤7;<br>100%的数据:T≤10,N≤8.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> AC[<span class="number">8</span>]=&#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">11</span>,<span class="number">14</span>,<span class="number">17</span>,<span class="number">20</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"shen.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"shen.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,AC[n<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>魔</title>
      <link href="//2016/1006/mo/"/>
      <url>//2016/1006/mo/</url>
      <content type="html"><![CDATA[<h1 id="魔-mo"><a href="#魔-mo" class="headerlink" title="魔(mo)"></a>魔(mo)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>有 n 个恶魔降临了…小 S 决定打击这些恶魔,她的魔法能在一瞬间同时杀死任意数量的恶魔,但是有些恶魔之间存在保护关系,比如恶魔 A 保护恶魔 B,则如果 A 不死则 B 不受伤害,现在小 S 想知道最少需要使用多少次魔法才能杀死所有恶魔,如果不能杀死所有恶魔,输出-1.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行两个个正整数 n 和 m 分别表示恶魔数和保护关系对数.接下来 m 行每行两个数 A 和 B 描述一对保护关系.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行一个整数表示答案.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>mo.in</th><th>mo.out</th></tr></thead><tbody><tr><td>3 2</td><td>2</td></tr><tr><td>1 2</td><td></td></tr><tr><td>3 2</td><td></td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>20%的数据:n≤10;<br>40%的数据:n≤100;<br>60%的数据:n≤1000;<br>80%的数据:n≤10000;<br>100%的数据:n≤100000.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"deque"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e+5</span> +<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Demon</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> no;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> De[N];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ft[N],nt[N],ed[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> TNT)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nt[TNT]=ft[u];</span><br><span class="line">ft[u]=TNT;</span><br><span class="line">ed[TNT]=v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">topo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">deque</span>&lt;Demon&gt; q;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span>(De[i]==<span class="number">0</span>)</span><br><span class="line">q.push_back((Demon)&#123;i,<span class="number">1</span>&#125;);</span><br><span class="line"><span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(q.size())</span><br><span class="line">&#123;</span><br><span class="line">Demon t=q.front();</span><br><span class="line">ans=t.no;</span><br><span class="line">tot++;</span><br><span class="line">q.pop_front();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=ft[t.id];i;i=nt[i])</span><br><span class="line">&#123;</span><br><span class="line">De[ed[i]]--;</span><br><span class="line"><span class="keyword">if</span>(De[ed[i]]==<span class="number">0</span>)</span><br><span class="line">q.push_back((Demon)&#123;ed[i],t.no+<span class="number">1</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> tot&lt;n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"mo.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"mo.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,a,b;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">add(a,b,i);</span><br><span class="line">De[b]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(topo())</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"-1"</span>) <span class="keyword">and</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans) <span class="keyword">and</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>恶</title>
      <link href="//2016/1006/e/"/>
      <url>//2016/1006/e/</url>
      <content type="html"><![CDATA[<h1 id="恶-e"><a href="#恶-e" class="headerlink" title="恶(e)"></a>恶(e)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>有 n 个恶魔就要诞生了,恶魔头子要给每个即将诞生的恶魔取一个名字,恶魔秘书给恶魔头子提供了 n 个字符串供参考,由于每个字符串单词都很长,恶魔头子想到先把单词化简一下,方法是把每个单词尽量取短些的前缀,但所取的前缀不能是其它单词的前缀.这个任务现在就交给你来完成.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行一个整数 N,表示单词个数.下面有 N 行,每行一个单词,每个单词的长度不超过 50,且都是由小写字母组成,保证所给单词没有一个单词是另一个单词的前缀.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>共 N 行,每行一个单词,是对应上面的 N 个单词化简后的单词.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>e.in</th><th>e.out</th></tr></thead><tbody><tr><td>3</td><td>a</td></tr><tr><td>abc</td><td>e</td></tr><tr><td>efg</td><td>i</td></tr><tr><td>ijh</td><td></td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>100%的数据:1 ≤N ≤50.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">54</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> name[N][N];</span><br><span class="line"><span class="keyword">char</span> ans[N],tmp[N];</span><br><span class="line"><span class="keyword">bool</span> avail;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"e.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"e.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,name[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(name[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=len;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(ans,name[i]);</span><br><span class="line">            ans[j]=<span class="string">'\0'</span>;</span><br><span class="line">            avail=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(k==i)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                <span class="built_in">strcpy</span>(tmp,name[k]);</span><br><span class="line">                tmp[j]=<span class="string">'\0'</span>;</span><br><span class="line">                <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(ans,tmp))</span><br><span class="line">                &#123;</span><br><span class="line">                    avail=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(avail)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,ans);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>风</title>
      <link href="//2016/1005/feng/"/>
      <url>//2016/1005/feng/</url>
      <content type="html"><![CDATA[<h1 id="风-feng"><a href="#风-feng" class="headerlink" title="风(feng)"></a>风(feng)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>起风了,风中飘着很多数字对,小 S 认为,只有满足某种特定关系的数字对才能飘得更远,现在她想知道满足 a+b&lt;=n,且 ab/(a+b)是整数的正整数对(a,b)有多少.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>一行一个正整数 n.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行一个整数表示答案.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>feng.in</th><th>feng.out</th></tr></thead><tbody><tr><td>21</td><td>11</td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>40%的数据:n≤10^3;60%的数据:n≤10^5;80%的数据:n≤10^7;100%的数据:n≤10^12;</p></blockquote></li></ul>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>水</title>
      <link href="//2016/1005/shui/"/>
      <url>//2016/1005/shui/</url>
      <content type="html"><![CDATA[<h1 id="水-shui"><a href="#水-shui" class="headerlink" title="水(shui)"></a>水(shui)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>小 S 有一个水瓶,里面装有一定量的水,由于某些原因,她只记得水瓶里的水在[L,R]区间内,小 S 还有两个水杯,她每次可以往一个杯子里倒任意数量的水(可以不是整数),如果不足则全部倒完,现在她想知道至少需要多少次操作才能保证对于[L,R]中的每个数,操作完成后水瓶里剩的水不超过 1,且两个杯子里水量的差也不超过 1.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行一个正整数 T 表示测试数据组数.接下来 T 行每行两个非负整数 L 和 R.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>对每组数据输出一行一个整数表示答案.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>shui.in</th><th>shui.out</th></tr></thead><tbody><tr><td>2</td><td>2</td></tr><tr><td>3 5</td><td>3</td></tr><tr><td>8 13</td><td></td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>20%的数据:L≤R≤10;<br>另有 20%的数据:L=R;<br>另有 20%的数据:L=0;<br>100%的数据:T≤10000,L≤R≤10^9.</p></blockquote></li></ul>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>地</title>
      <link href="//2016/1005/di/"/>
      <url>//2016/1005/di/</url>
      <content type="html"><![CDATA[<h1 id="地-di"><a href="#地-di" class="headerlink" title="地(di)"></a>地(di)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>地上有一块 n*n 的棋盘,小 S 决定在上面放棋子,使任意两个棋子都不在同一行或同一列或同一斜线,由于小 S 不想思考,她决定逐行且在每行从左往右考虑格子,如果能放棋子就放上棋子,现在她想知道这样会放上多少个棋子.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>一行一个正整数 n.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行一个整数表示答案.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>di.in</th><th>di.out</th></tr></thead><tbody><tr><td>5</td><td>5</td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>40%的数据:n≤1000;60%的数据:n≤20000;80%的数据:n≤30000;100%的数据:n≤40000.</p></blockquote></li></ul>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>数</title>
      <link href="//2016/1005/shu/"/>
      <url>//2016/1005/shu/</url>
      <content type="html"><![CDATA[<h1 id="数-shu"><a href="#数-shu" class="headerlink" title="数(shu)"></a>数(shu)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>将 N 个整数排成一行,每个整数 a[i]的值在(-10000 ≤ a[i] ≤10000).然后从这一行数中进行取数,其规则是:可从这一行中的任何一个位置开始取数,到任何位置结束,但不能不取.找出一种取法,使得取得的和为最大,再找出一种取法,使得取得的和为最小.例如: N=4, 4 个数依次为:13,-6,7,-8 取得和为最大的是:13+(-6)+7=14 取得和为最小的是:-8.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行有一个整数 N,第二行为 N 个整数.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>输出二行,第一行一个整数表示取得和的最大值,第二行一个整数表示取得和的最小值.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>shu.in</th><th>shu.out</th></tr></thead><tbody><tr><td>4</td><td>14</td></tr><tr><td>13 -6 7 -8</td><td>-8</td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">2147483647</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> mx=-INF,mn=+INF;</span><br><span class="line"><span class="keyword">int</span> mxs,mns;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"shu.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"shu.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">        mxs=mxs+a&lt;<span class="number">0</span>?<span class="number">0</span>:mxs+a;</span><br><span class="line">        mns=mns+a&gt;<span class="number">0</span>?<span class="number">0</span>:mns+a;</span><br><span class="line">        mx=mx&gt;mxs?mx:mxs;</span><br><span class="line">        mn=mn&lt;mns?mn:mns;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n%d\n"</span>,mx,mn);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>回文串</title>
      <link href="//2016/1005/palind/"/>
      <url>//2016/1005/palind/</url>
      <content type="html"><![CDATA[<h1 id="回文串-palind"><a href="#回文串-palind" class="headerlink" title="回文串(palind)"></a>回文串(palind)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>输入一个只由大小写字母,数字组成的字符串,计算至少添加几个字符才能使得它变成一个回文串.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行为正整数t(≤5),表示数据组数;接下来t行,每行一个只由大小写字母和数字组成的字符串,长度不超过5000.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>对于每组数据,输出最少添加字符数.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>palind.in</th><th>palind.out</th></tr></thead><tbody><tr><td>2</td><td>2</td></tr><tr><td>Ab3bd</td><td>2</td></tr><tr><td>abcdcda</td><td></td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">5004</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="keyword">char</span> a[N],b[N];</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"palind.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"palind.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,a);</span><br><span class="line">n=<span class="built_in">strlen</span>(a);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">f[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">b[n-i]=a[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">f[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i<span class="number">-1</span>]==b[j<span class="number">-1</span>])</span><br><span class="line">f[i][j]=f[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">f[i][j]=max(f[i<span class="number">-1</span>][j],f[i][j<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n-f[n][n]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>能量项链</title>
      <link href="//2016/1005/energy/"/>
      <url>//2016/1005/energy/</url>
      <content type="html"><![CDATA[<h1 id="能量项链-energy"><a href="#能量项链-energy" class="headerlink" title="能量项链(energy)"></a>能量项链(energy)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>在Mars星球上,每个Mars人都随身佩带着一串能量项链.在项链上有N颗能量珠.能量珠是一颗有头标记与尾标记的珠子,这些标记对应着某个正整数.并且,对于相邻的两颗珠子,前一颗珠子的尾标记一定等于后一颗珠子的头标记.因为只有这样,通过吸盘(吸盘是Mars人吸收能量的一种器官)的作用,这两颗珠子才能聚合成一颗珠子,同时释放出可以被吸盘吸收的能量.如果前一颗能量珠的头标记为m,尾标记为r,后一颗能量珠的头标记为r,尾标记为n,则聚合后释放的能量为(Mars单位),新产生的珠子的头标记为m,尾标记为n.<br>需要时,Mars人就用吸盘夹住相邻的两颗珠子,通过聚合得到能量,直到项链上只剩下一颗珠子为止.显然,不同的聚合顺序得到的总能量是不同的,请你设计一个聚合顺序,使一串项链释放出的总能量最大.<br>例如:设N=4,4颗珠子的头标记与尾标记依次为(2,3) (3,5) (5,10) (10,2).我们用记号⊕表示两颗珠子的聚合操作,(j⊕k)表示第j,k两颗珠子聚合后所释放的能量.则第4,1两颗珠子聚合后释放的能量为:<br>(4⊕1)=10<em>2</em>3=60.<br>这一串项链可以得到最优值的一个聚合顺序所释放的总能量为<br>((4⊕1)⊕2)⊕3)=10<em>2</em>3+10<em>3</em>5+10<em>5</em>10=710.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行是一个正整数N(4≤N≤100),表示项链上珠子的个数.第二行是N个用空格隔开的正整数,所有的数均不超过1000,第i个数为第i颗珠子的头标记(1≤i≤N),当i&lt;N时,第i颗珠子的尾标记应该等于第i+1颗珠子的头标记.第N颗珠子的尾标记应该等于第1颗珠子的头标记.<br>至于珠子的顺序,你可以这样确定:将项链放到桌面上,不要出现交叉,随意指定第一颗珠子,然后按顺时针方向确定其他珠子的顺序.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>只有一个正整数E(E≤2.1*109),为一个最优聚合顺序所释放的总能量.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>energy.in</th><th>energy.out</th></tr></thead><tbody><tr><td>4</td><td>710</td></tr><tr><td>2 3 5 10</td><td></td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">104</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">2147483647</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,ans;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2</span>*N];</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"energy.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"energy.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">a[n+i]=a[i];</span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">2</span>*n+<span class="number">1</span>]=a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> ai=<span class="number">1</span>;ai&lt;=n;ai++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-l+<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j=i+l<span class="number">-1</span>;</span><br><span class="line">f[i][j]=-INF;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">f[i][j]=max(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]+a[i+ai]*a[k+ai+<span class="number">1</span>]*a[j+ai+<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=max(ans,f[<span class="number">1</span>][n]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>石子合并</title>
      <link href="//2016/1005/stones/"/>
      <url>//2016/1005/stones/</url>
      <content type="html"><![CDATA[<h1 id="石子合并-stones"><a href="#石子合并-stones" class="headerlink" title="石子合并(stones)"></a>石子合并(stones)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>有N(≤200)堆石子排成一排,每堆石子有一定的数量.现要将N堆石子合并成为一堆.合并的过程只能每次将相邻的两堆石子堆成一堆,每次合并花费的代价为这两堆石子的和,经过N-1次合并后成为一堆.求出总的代价最小值.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行为正整数t(≤5),表示数据组数;每组数据中,第一行为正整数n(≤200),表示石子总数,第二行为以空格隔开的n个正整数ai(≤1000),分别表示每堆石子的个数.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>对于每组数据,输出最小总代价.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>stones.in</th><th>stones.out</th></tr></thead><tbody><tr><td>2</td><td>9</td></tr><tr><td>3</td><td>239</td></tr><tr><td>1 2 3</td><td></td></tr><tr><td>7</td><td></td></tr><tr><td>13 7 8 16 21 4 18</td><td></td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">204</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">2147483647</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="keyword">int</span> a[N],s[N];</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"stones.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"stones.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">s[i]=s[i<span class="number">-1</span>]+a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-l+<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j=i+l<span class="number">-1</span>;</span><br><span class="line">f[i][j]=INF;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]+s[j]-s[i<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; f[<span class="number">1</span>][n] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>编辑距离</title>
      <link href="//2016/1005/dist/"/>
      <url>//2016/1005/dist/</url>
      <content type="html"><![CDATA[<h1 id="编辑距离-dist"><a href="#编辑距离-dist" class="headerlink" title="编辑距离(dist)"></a>编辑距离(dist)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>编辑距离是指两个字串之间,由一个转成另一个所需的最少编辑操作次数,允许的编辑操作包括:将一个字符替换成另一个字符,插入一个字符,删除一个字符.给出两个字符串s1和s2,找出它们之间的编辑距离,即由字符串s1最少经过多少步操作变成字符串s2.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>两行字符串,全部由小写字母组成,长度均不超过1000.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>只包含一个整数,表示两个字符串的编辑距离.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>dist.in</th><th>dist.out</th></tr></thead><tbody><tr><td>abcde</td><td>4</td></tr><tr><td>acefg</td><td></td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1004</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> a,b;</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"dist.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"dist.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;a[i<span class="number">-1</span>];i++)</span><br><span class="line">f[i][<span class="number">0</span>]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;b[i<span class="number">-1</span>];i++)</span><br><span class="line">f[<span class="number">0</span>][i]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;a[i<span class="number">-1</span>];i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;b[j<span class="number">-1</span>];j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a[i<span class="number">-1</span>]==b[j<span class="number">-1</span>])</span><br><span class="line">c=<span class="number">0</span>;</span><br><span class="line">f[i][j]=min(f[i<span class="number">-1</span>][j]+<span class="number">1</span>,min(f[i][j<span class="number">-1</span>]+<span class="number">1</span>,f[i<span class="number">-1</span>][j<span class="number">-1</span>]+c));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[a.size()][b.size()]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Fib之奇偶性</title>
      <link href="//2016/1005/fibs/"/>
      <url>//2016/1005/fibs/</url>
      <content type="html"><![CDATA[<h1 id="Fib之奇偶性-fibs"><a href="#Fib之奇偶性-fibs" class="headerlink" title="Fib之奇偶性(fibs)"></a>Fib之奇偶性(fibs)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>Fibonacci数列大家都已经很熟悉了:f(0)=0,f(1)=1, f(n)=f(n-1)+f(n-2) n≥2.给定正整数n,判别数列第n项的奇偶性.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行为正整数t(≤100),表示数据组数;接下来t行,每行一个正整数n(≤108).</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>输出第n项Fibonacci数列的奇偶性,如果为奇数则请输出“ODD”,否则为“EVEN”.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>fibs.in</th><th>fibs.out</th></tr></thead><tbody><tr><td>3</td><td>ODD</td></tr><tr><td>1</td><td>ODD</td></tr><tr><td>2</td><td>EVEN</td></tr><tr><td>3</td><td></td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"fibs.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"fibs.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">n%=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(!n)</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"EVEN"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"ODD"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>表彰</title>
      <link href="//2016/1004/commend/"/>
      <url>//2016/1004/commend/</url>
      <content type="html"><![CDATA[<h1 id="表彰-commend"><a href="#表彰-commend" class="headerlink" title="表彰(commend)"></a>表彰(commend)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>轰炸取得了圆满成功,YJC 决定对飞行员们进行表彰,并选出一名飞行王者.一共有m 名飞行员参加了轰炸,C 国一共有 n 个飞行大队,第 i 个飞行大队认为第 j 个飞行员应该成为飞行王者的人数为 ai,j.对于每一个飞行大队,在这个大队得票最高的飞行员叫做这个大队选择的飞行王者,如果有多个取编号最小的那一个.被最多大队选择的飞行员就是飞行王者,同样如果有多个取编号最小的那一个.现在 YJC 想知道,飞行王者究竟是几号飞行员?</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行包含两个整数 n 和 m,表示飞行大队的个数和飞行员的个数.<br>接下来 n 行每行包含 m 个整数,第(i+1)行第 j 个整数 ai,j 表示第 i 个飞行大队认为第 j个飞行员应该成为飞行王者的人数.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行,包含一个整数,表示飞行王者是几号飞行员.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>commend.in</th><th>commend.out</th></tr></thead><tbody><tr><td>2 2</td><td>1</td></tr><tr><td>2 2</td><td></td></tr><tr><td>1 2</td><td></td></tr></tbody></table><ul><li><h3 id="样例解释"><a href="#样例解释" class="headerlink" title="[样例解释]"></a>[样例解释]</h3><blockquote><p>在 1 大队,飞行员 1 得到 2 票,飞行员 2 同样得到 2 票,但飞行员 1 编号小,所以 1大队选择飞行员 1 成为飞行王者.<br>在 2 大队,飞行员 1 得到 1 票,飞行员 2 得到 2 票,所以 2 大队选择飞行员 2 成为飞行王者.<br>飞行员 1 被 1 个大队选择,飞行员 2 同样被 1 个大队选择,但飞行员 1 编号小,所以飞行员 1 成为飞行王者.</p></blockquote></li><li><h3 id="数据说明"><a href="#数据说明" class="headerlink" title="[数据说明]"></a>[数据说明]</h3><blockquote><p>对于 100%的数据,满足 2≤n,m≤50,0≤ai,j≤109.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">54</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[N][N],bin[N];</span><br><span class="line"><span class="keyword">int</span> mx,mxi;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"commend.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"commend.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        mx=mxi=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">            <span class="keyword">if</span>(a[i][j]&gt;mx)</span><br><span class="line">            &#123;</span><br><span class="line">                mx=a[i][j];</span><br><span class="line">                mxi=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        bin[mxi]++;</span><br><span class="line">    &#125;</span><br><span class="line">    mx=mxi=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(bin[i]&gt;mx)</span><br><span class="line">        &#123;</span><br><span class="line">            mx=bin[i];</span><br><span class="line">            mxi=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,mxi);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>轰炸</title>
      <link href="//2016/1004/bomb/"/>
      <url>//2016/1004/bomb/</url>
      <content type="html"><![CDATA[<h1 id="轰炸-bomb"><a href="#轰炸-bomb" class="headerlink" title="轰炸(bomb)"></a>轰炸(bomb)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>C 国和 W 国爆发了战争!YJC 决定对 W 国的 n 个城市进行轰炸.每个城市都有一个重要度 ai.设 xi=重要度大于 ai的城市数+1,那么第 i 个城市就是第 xi个被轰炸的城市.显然这样能保证重要度大的城市先被轰炸,重要度相同的城市同时被轰炸.现在 YJC 想知道,对于每一个 i,xi等于多少?</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行包含一个整数 n,表示城市个数.<br>第二行包含 n 个整数,第 i 个整数 ai表示第 i 个城市的重要度.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行,包含 n 个整数,第 i 个整数 xi表示第 i 个城市是第几个被轰炸的城市.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>bomb.in</th><th>bomb.out</th></tr></thead><tbody><tr><td>5</td><td>1 3 1 3 3</td></tr><tr><td>3 1 3 1 1</td><td></td></tr></tbody></table><ul><li><h3 id="数据说明"><a href="#数据说明" class="headerlink" title="[数据说明]"></a>[数据说明]</h3><blockquote><p>对于 100%的数据,满足 1≤n≤2000,1≤ai≤109.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2004</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">2147483647</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">City</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id,ip;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">&#125;a[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (City a,City b)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> a.ip&gt;b.ip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &gt; (City a,City b)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> a.id&lt;b.id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"bomb.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"bomb.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i].ip);</span><br><span class="line">        a[i].id=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n,less&lt;City&gt;());</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    a[<span class="number">0</span>].ip=-INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].ip!=a[i<span class="number">-1</span>].ip)</span><br><span class="line">            cnt=i;</span><br><span class="line">        a[i].x=cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n,greater&lt;City&gt;());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i].x);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>图论</title>
      <link href="//graph/"/>
      <url>//graph/</url>
      <content type="html"><![CDATA[<h1 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h1><hr><a id="more"></a><ul><li><h2 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h2></li><li><h3 id="邻接矩阵"><a href="#邻接矩阵" class="headerlink" title="邻接矩阵"></a>邻接矩阵</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从u到v有一条权值为w的边</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    G[a][b]=c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="邻接表"><a href="#邻接表" class="headerlink" title="邻接表"></a>邻接表</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从u到v有一条权值为w的边</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tnt++;</span><br><span class="line">    weight[tnt]=a;</span><br><span class="line">    edge[tnt]=j;</span><br><span class="line">    next[tnt]=head[i];</span><br><span class="line">    head[i]=tnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h2 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h2><p>&lt;!–</p></li><li><h3 id="深度优先"><a href="#深度优先" class="headerlink" title="深度优先"></a>深度优先</h3></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h3 id="广度优先"><a href="#广度优先" class="headerlink" title="广度优先"></a>广度优先</h3></li></ul><p><code>`</code>c++<br>void BFS()<br>{</p><p>}<br><code>`</code> –&gt;</p>]]></content>
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> snippets </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>快速幂</title>
      <link href="//quickpower/"/>
      <url>//quickpower/</url>
      <content type="html"><![CDATA[<h1 id="ab-mod-c"><a href="#ab-mod-c" class="headerlink" title="ab mod c"></a>a<sup>b</sup> mod c</h1><hr><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">QuickPower</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">    a=a%c;</span><br><span class="line">    <span class="keyword">while</span>(b&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            cnt=(cnt*a)%c;</span><br><span class="line">        b/=<span class="number">2</span>;</span><br><span class="line">        a=(a*a)%c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> algorithm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> snippets </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>序列</title>
      <link href="//2016/1003/seq/"/>
      <url>//2016/1003/seq/</url>
      <content type="html"><![CDATA[<h1 id="序列-seq"><a href="#序列-seq" class="headerlink" title="序列(seq)"></a>序列(seq)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="描述"><a href="#描述" class="headerlink" title="[描述]"></a>[描述]</h3><blockquote><p>我们按以下方式产生序列:<br>1, 开始时序列是: “O” ;<br>2, 每一次变化把序列中的 “O” 变成 “OI” ,”I” 变成 “O”.<br>经过无限次变化,我们得到序列”OIOOIOIOOIOOIOIOOIO….”.<br>总共有 Q个询问,每次询问为:在区间[a,b]之间有多少个”O”.<br>请写一个程序回答Q个询问</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行为一个整数Q;<br>接下来有Q行,每行两个数用空格隔开的整数a, b.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>共Q行,每行一个回答.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>seq.in</th><th>seq.out</th></tr></thead><tbody><tr><td>1</td><td>4</td></tr></tbody></table><p>2 8</p><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>100%的数据: 1≤Q≤5000,1≤a≤b&lt;2^63.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">92</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x[N+<span class="number">4</span>],y[N+<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">find</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">        <span class="keyword">if</span>(x[i]&gt;=a)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span>(a==x[i])</span><br><span class="line">        <span class="keyword">return</span> y[i];</span><br><span class="line">    <span class="keyword">return</span> y[i<span class="number">-1</span>]+find(a-x[i<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"seq.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"seq.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    x[<span class="number">1</span>]=<span class="number">1</span>;x[<span class="number">2</span>]=<span class="number">2</span>;</span><br><span class="line">    y[<span class="number">1</span>]=y[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        x[i]=x[i<span class="number">-1</span>]+x[i<span class="number">-2</span>];</span><br><span class="line">        y[i]=y[i<span class="number">-1</span>]+y[i<span class="number">-2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> a,b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;a,&amp;b);</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=find(b)-find(a<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>国际象棋</title>
      <link href="//2016/1003/chess/"/>
      <url>//2016/1003/chess/</url>
      <content type="html"><![CDATA[<h1 id="国际象棋-chess"><a href="#国际象棋-chess" class="headerlink" title="国际象棋(chess)"></a>国际象棋(chess)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>YJC 想学习国际象棋,但他连个子怎么走都不会.所以他决定练习怎么走子.<br>YJC 有一块 n*m 的棋盘,他在上面摆了若干个皇后,皇后可以走到同一行,同一列,同一条对角线上的任意一个格子.现在他想知道:有多少个格子满足上面有皇后或者可以被某个皇后走到?</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行包含两个整数 n 和 m,表示棋盘的行数和列数.<br>接下来 n 行每行包含 m 个字符,第(i+1)行第 j 个字符如果是’.’表示上面没有放皇后,如果是’X’表示上面放了皇后.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行,包含一个整数,表示有多少个格子满足上面有皇后或者可以被某个皇后走到.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>chess.in</th><th>chess.out</th></tr></thead><tbody><tr><td>2 2</td><td>4</td></tr><tr><td>.X</td><td></td></tr><tr><td>X.</td><td></td></tr></tbody></table><ul><li><h3 id="数据说明"><a href="#数据说明" class="headerlink" title="[数据说明]"></a>[数据说明]</h3><blockquote><p>对于 100%的数据,满足 2≤n,m≤50.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">54</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">bool</span> <span class="built_in">map</span>[N][N];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"chess.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"chess.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d\n"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> c=getchar();</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">'X'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> jj=<span class="number">1</span>;jj&lt;=m;jj++)</span><br><span class="line">                    <span class="built_in">map</span>[i][jj]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> ii=<span class="number">1</span>;ii&lt;=n;ii++)</span><br><span class="line">                    <span class="built_in">map</span>[ii][j]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> ii=i,jj=j;ii&gt;=<span class="number">1</span> <span class="keyword">and</span> jj&gt;=<span class="number">1</span>;ii--,jj--)</span><br><span class="line">                    <span class="built_in">map</span>[ii][jj]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> ii=i,jj=j;ii&lt;=n <span class="keyword">and</span> jj&lt;=m;ii++,jj++)</span><br><span class="line">                    <span class="built_in">map</span>[ii][jj]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> ii=i,jj=j;ii&gt;=<span class="number">1</span> <span class="keyword">and</span> jj&lt;=m;ii--,jj++)</span><br><span class="line">                    <span class="built_in">map</span>[ii][jj]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> ii=i,jj=j;ii&lt;=n <span class="keyword">and</span> jj&gt;=<span class="number">1</span>;ii++,jj--)</span><br><span class="line">                    <span class="built_in">map</span>[ii][jj]=<span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            tot+=<span class="built_in">map</span>[i][j];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,tot);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>幂</title>
      <link href="//2016/1003/power/"/>
      <url>//2016/1003/power/</url>
      <content type="html"><![CDATA[<h1 id="幂-power"><a href="#幂-power" class="headerlink" title="幂(power)"></a>幂(power)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>YJC 想学习幂级数,但他连幂是什么都不知道.所以他想向你请教:在[L,R]中有多少个数是 n 的整数次幂?</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行包含三个整数 L,R 和 n,意思如题所示.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行,包含一个整数,表示在[L,R]中有多少个数是 n 的整数次幂.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>power.in</th><th>power.out</th></tr></thead><tbody><tr><td>1 10 2</td><td>4</td></tr></tbody></table><ul><li><h3 id="数据说明"><a href="#数据说明" class="headerlink" title="[数据说明]"></a>[数据说明]</h3><blockquote><p>对于 100%的数据,满足 1≤L≤R≤10<sup>9</sup>,2≤n≤10<sup>9</sup>.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> l,r,tot;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> cnt=<span class="number">1</span>,n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"power.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"power.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%lld"</span>,&amp;l,&amp;r,&amp;n);</span><br><span class="line">    <span class="keyword">while</span>(cnt&lt;l)</span><br><span class="line">        cnt*=n;</span><br><span class="line">    <span class="keyword">while</span>(cnt&lt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        tot++;</span><br><span class="line">        cnt*=n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,tot);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>奶酪(cheese)</title>
      <link href="//2016/1003/cheese/"/>
      <url>//2016/1003/cheese/</url>
      <content type="html"><![CDATA[<h1 id="奶酪-cheese"><a href="#奶酪-cheese" class="headerlink" title="奶酪(cheese)"></a>奶酪(cheese)</h1><hr><h2 id="总时间限制-100ms-内存限制-65536kB"><a href="#总时间限制-100ms-内存限制-65536kB" class="headerlink" title="总时间限制: 100ms | 内存限制: 65536kB"></a>总时间限制: 100ms | 内存限制: 65536kB</h2><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="描述"><a href="#描述" class="headerlink" title="[描述]"></a>[描述]</h3><blockquote><p>阿尔吉侬是一只聪明又慵懒的小白鼠,它最擅长的就是走各种各样的迷宫.今天它要挑战一个非常大的迷宫,研究员们为了鼓励阿尔吉侬尽快到达终点,就在终点放了一块阿尔吉侬最喜欢的奶酪.现在研究员们想知道,如果阿尔吉侬足够聪明,它最少需要多少时间就能吃到奶酪.<br>迷宫用一个R×C的字符矩阵来表示.字符S表示阿尔吉侬所在的位置,字符E表示奶酪所在的位置,字符#表示墙壁,字符.表示可以通行.阿尔吉侬在1个单位时间内可以从当前的位置走到它上下左右四个方向上的任意一个位置,但不能走出地图边界.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行包含了两个用空格分开的正整数R和C(2 &lt;= R, C &lt;= 200),表示地图是一个R×C的矩阵.<br>接下来的R行描述了地图的具体内容,每一行包含了C个字符.字符含义如题目描述中所述.保证有且仅有一个S和E.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>对于每一组数据,输出阿尔吉侬吃到奶酪的最少单位时间.若阿尔吉侬无法吃到奶酪,则输出“oop!”(只输出引号里面的内容,不输出引号).每组数据的输出结果占一行.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>cheese1.in</th><th>cheese1.out</th></tr></thead><tbody><tr><td>3 4</td><td>5</td></tr><tr><td>.S..</td><td></td></tr><tr><td>###.</td><td></td></tr><tr><td>..E.</td><td></td></tr></tbody></table><table><thead><tr><th>cheese2.in</th><th>cheese2.out</th></tr></thead><tbody><tr><td>3 4</td><td>1</td></tr><tr><td>.S..</td><td></td></tr><tr><td>.E..</td><td></td></tr><tr><td>….</td><td></td></tr></tbody></table><table><thead><tr><th>cheese3.in</th><th>cheese3.out</th></tr></thead><tbody><tr><td>3 4</td><td>oop!</td></tr><tr><td>.S..</td><td></td></tr><tr><td>####</td><td></td></tr><tr><td>..E.</td><td></td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"deque"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">204</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> X[<span class="number">4</span>]=&#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Y[<span class="number">4</span>]=&#123; <span class="number">1</span>,<span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">XOY</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="keyword">int</span> s;</span><br><span class="line">&#125;b,e;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">bool</span> a[N][N],v[N][N];</span><br><span class="line"><span class="built_in">deque</span>&lt;XOY&gt; q;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BFS</span><span class="params">(XOY x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    q.push_back(x);</span><br><span class="line">    <span class="keyword">while</span>(q.size())</span><br><span class="line">    &#123;</span><br><span class="line">        XOY o=q.front();</span><br><span class="line">        q.pop_front();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> xx=o.x+X[i],yy=o.y+Y[i];</span><br><span class="line">            <span class="keyword">if</span>(xx&lt;<span class="number">1</span> <span class="keyword">or</span> xx&gt;n <span class="keyword">or</span> yy&lt;<span class="number">1</span> <span class="keyword">or</span> yy&gt;m)</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(v[xx][yy] <span class="keyword">or</span> a[xx][yy])</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            v[xx][yy]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(xx==e.x <span class="keyword">and</span> yy==e.y)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">cout</span> &lt;&lt; o.s+<span class="number">1</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">return</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            q.push_back((XOY)&#123;xx,yy,o.s+<span class="number">1</span>&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">"oop!"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> c;</span><br><span class="line">            <span class="built_in">cin</span> &gt;&gt; c;</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">'S'</span>)</span><br><span class="line">                b.x=i,b.y=j;</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">'E'</span>)</span><br><span class="line">                e.x=i,e.y=j;</span><br><span class="line">            a[i][j]=(c==<span class="string">'#'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    BFS(b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>赌徒</title>
      <link href="//2016/1002/gambler/"/>
      <url>//2016/1002/gambler/</url>
      <content type="html"><![CDATA[<h1 id="赌徒-gambler"><a href="#赌徒-gambler" class="headerlink" title="赌徒(gambler)"></a>赌徒(gambler)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="描述"><a href="#描述" class="headerlink" title="[描述]"></a>[描述]</h3><blockquote><p>有N个赌徒,手里各自有自己的筹码.在赌博时,他们能向周围的赌徒借钱,所以他们的筹码可能是负的,但筹码都一定是整数.当结束赌博时,N个赌徒当中,筹码刚是另外3个人筹码的总和的赌徒为胜者.如果有多个符合条件的赌徒,选择筹码最大的那个人为胜者.例如 5个赌徒,结束赌博时各有 2,3,5,7,12,则他们中的胜者是持有12的人,因为 12=2+3+7.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行为一个整数n,表示有n个赌徒.接下去n行,每行一个整数x表示赌博结束时,每个赌徒手中的筹码.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>仅一个整数表示赌博结束时,胜者手中的筹码数.如果没有胜者则输出“no solution”.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>gambler.in</th><th>gambler.out</th></tr></thead><tbody><tr><td>5</td><td>12</td></tr></tbody></table><p>2<br>3<br>5<br>7<br>12</p><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>50%的数据满足:1≤n≤100;<br>100%的数据满足:1≤n≤1000,-10^8≤x≤10^8.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1004</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">4544443</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">List</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> s;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">&#125;l[N*N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,li;</span><br><span class="line"><span class="keyword">int</span> a[N],tot[MOD];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">ab</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&lt;<span class="number">0</span>?-x:x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    l[++li].s=s;l[li].a=a;l[li].b=b;</span><br><span class="line">    l[li].n=tot[ab(s)%MOD];</span><br><span class="line">    tot[ab(s)%MOD]=li;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">op</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=tot[ab(s)%MOD];i&gt;=<span class="number">1</span>;i=l[i].n)</span><br><span class="line">        <span class="keyword">if</span>(l[i].s==s <span class="keyword">and</span> l[i].a!=a <span class="keyword">and</span> l[i].b!=b <span class="keyword">and</span> l[i].a!=b <span class="keyword">and</span> l[i].b!=a)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"gambler.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"gambler.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            add(i,j,a[i]+a[j]);</span><br><span class="line">    <span class="keyword">bool</span> f=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            <span class="keyword">if</span>(i!=j <span class="keyword">and</span> op(i,j,a[i]-a[j]))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[i]);</span><br><span class="line">                f=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span>(f)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!f)</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"no solution"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>购物</title>
      <link href="//2016/1002/shopping/"/>
      <url>//2016/1002/shopping/</url>
      <content type="html"><![CDATA[<h1 id="购物-shopping"><a href="#购物-shopping" class="headerlink" title="购物(shopping)"></a>购物(shopping)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="描述"><a href="#描述" class="headerlink" title="[描述]"></a>[描述]</h3><blockquote><p>今天,金鹰新城市开业了,小Y也去凑热闹.他看到促销广告:商品大减价.于是他很高兴地拿着篮子购物去了.<br>已知商场有n种商品.每种商品的重量为w千克,价格为v,价值为t.此种商品有h件.</p><blockquote><p>注意:此商场有一个奇怪的规定.每种物品要么不买,要么买1件或h件.小Y带了y元且他最多能扛x千克的物品.请帮小Y最多能获得的价值(不允许抢劫).</p></blockquote></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行有3个用空格隔开的整数n,x和y.<br>接下来的n行,每行有4个数据,分别为w,v,t和h.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>仅有一行,表示小Y能获得的最大价值.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>shopping.in</th><th>shopping.out</th></tr></thead><tbody><tr><td>2 8 10</td><td>17</td></tr></tbody></table><p>5 3 7 1<br>3 7 10 1</p><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>100%的数据满足:0≤n≤300,0≤x≤100,0≤y≤100,0≤h≤10.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">304</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Item</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> w,v,t,h;</span><br><span class="line">&#125;a[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,W,V;</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mx</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&gt;y?x:y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Choose</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> j,<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x=f[j-a[i].w][k-a[i].v]+a[i].t;</span><br><span class="line">    <span class="keyword">int</span> y=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(j&gt;=a[i].w*a[i].h <span class="keyword">and</span> k&gt;=a[i].v*a[i].h)</span><br><span class="line">        y=f[j-a[i].w*a[i].h][k-a[i].v*a[i].h]+a[i].t*a[i].h;</span><br><span class="line">    <span class="keyword">return</span> mx(x,y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"shopping.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"shopping.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;W,&amp;V);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d%d%d"</span>,&amp;a[i].w,&amp;a[i].v,&amp;a[i].t,&amp;a[i].h);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=W;j&gt;=a[i].w;j--)</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=V;k&gt;=a[i].v;k--)</span><br><span class="line">            &#123;</span><br><span class="line">                f[j][k]=mx(f[j][k],Choose(i,j,k));</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[W][V]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>回文平方数</title>
      <link href="//2016/1002/palind/"/>
      <url>//2016/1002/palind/</url>
      <content type="html"><![CDATA[<h1 id="回文平方数-palind"><a href="#回文平方数-palind" class="headerlink" title="回文平方数(palind)"></a>回文平方数(palind)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="描述"><a href="#描述" class="headerlink" title="[描述]"></a>[描述]</h3><blockquote><p>回文数是指从左向右读和从右向左读都一样的数.如12321就是一个回文数.<br>现在给定一个进制B(B是十进制),输出所有的大于等于1小于等于300且它的平方用B进制表示时是回文数的数.用” A “,”B”……表示10,11等等.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>共一行,一个单独的整数B(B用十进制表示).</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>每行两个数字(都是B进制数表示),第二个数是第一个数的平方,且第二个数是回文数.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>palind.in</th><th>palind.out</th></tr></thead><tbody><tr><td>10</td><td>1 1</td></tr><tr><td></td><td>2 4</td></tr><tr><td></td><td>3 9</td></tr><tr><td></td><td>11 121</td></tr><tr><td></td><td>22 484</td></tr><tr><td></td><td>26 676</td></tr><tr><td></td><td>101 10201</td></tr><tr><td></td><td>111 12321</td></tr><tr><td></td><td>121 14641</td></tr><tr><td></td><td>202 40804</td></tr><tr><td></td><td>212 44944</td></tr><tr><td></td><td>264 69696</td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>100%的数据:2≤B≤20.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> b;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">op</span><span class="params">(<span class="built_in">string</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> y=x;</span><br><span class="line">    reverse(y.begin(),y.end());</span><br><span class="line">    <span class="keyword">return</span> (x==y);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> <span class="title">change</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;=<span class="number">10</span>)</span><br><span class="line">        <span class="keyword">return</span> x<span class="number">-10</span>+<span class="string">'A'</span>;</span><br><span class="line">    <span class="keyword">return</span> x+<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">toB</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> y;</span><br><span class="line">    <span class="keyword">while</span>(x)</span><br><span class="line">    &#123;</span><br><span class="line">        y.insert(y.end(),change(x%b));</span><br><span class="line">        x/=b;</span><br><span class="line">    &#125;</span><br><span class="line">    reverse(y.begin(),y.end());</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"ps.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"ps.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">300</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> x=toB(i);</span><br><span class="line">        <span class="built_in">string</span> y=toB(i*i);</span><br><span class="line">        <span class="keyword">if</span>(op(y))</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; x &lt;&lt; <span class="string">' '</span> &lt;&lt; y &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>解压</title>
      <link href="//2016/1002/unzip/"/>
      <url>//2016/1002/unzip/</url>
      <content type="html"><![CDATA[<h1 id="解压-unzip"><a href="#解压-unzip" class="headerlink" title="解压(unzip)"></a>解压(unzip)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="描述"><a href="#描述" class="headerlink" title="[描述]"></a>[描述]</h3><blockquote><p>读取一些被压缩的数据,进行解压,再根据题目要求将结果输出至屏幕.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行为一个正整数k,指明以下的数据分为k段.<br>第二行是k段压缩数据串,每个段有两种格式(数之间用一个空格分隔):<br>如果每段第1个数n为正,则该段只有两个数,其解压操作是将该段的第2个数重复n次;<br>如果每段第1个数n为负数,则该段有|n|+1个数,其解压操作是重复该段从第2个数开始的|n|个数一次.(注:|n|表示取n的绝对值)</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>经解压后得到的整数串上所有数字之和.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>unzip.in</th><th>unzip.out</th></tr></thead><tbody><tr><td>5</td><td>31</td></tr></tbody></table><p>3 2 -5 0 1 2 3 4 5 1 5 0 -4 4 3 2 1</p><ul><li><h3 id="样例-Explan"><a href="#样例-Explan" class="headerlink" title="[样例] Explan"></a>[样例] Explan</h3><blockquote><p>经解压后得到的整数串 2 2 2 0 1 2 3 4 1 1 1 1 1 0 0 0 0 0 4 3 2 1</p></blockquote></li><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>100%的数据:k≤10,|n|≤10,其余的数≤10000.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t,n,a;</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ans</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt+=x%<span class="number">10</span>;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"unzip.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"unzip.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="keyword">if</span>(n&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">            tot+=ans(a)\*n;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            n=-n;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">                tot+=ans(a);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,tot);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>加一</title>
      <link href="//2016/1002/addone/"/>
      <url>//2016/1002/addone/</url>
      <content type="html"><![CDATA[<h1 id="加一-addone"><a href="#加一-addone" class="headerlink" title="加一(addone)"></a>加一(addone)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>你的任务是很简单,给你一个非负整数 N,输出 N+1.<br>唯一的复杂之处在于给出的整数是一个 2~36 进制(包括边界)中一个未知进制的整数.(大家知道的,从 10 开始的数字分别用 A,B,C,……来表示)因此,你的程序必须按字典序递增输出所有可能的结果.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>一行,包含一个由数字 0 至 9 与大写字母 A 至 Z 组成的整数 N,数据保证没有前导零.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>输出所有的可能结果,每个结果占一行.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>addone1.in</th><th>addone1.out</th></tr></thead><tbody><tr><td>32</td><td>33</td></tr></tbody></table><table><thead><tr><th>addone2.in</th><th>addone2.out</th></tr></thead><tbody><tr><td>9</td><td>10</td></tr><tr><td></td><td>A</td></tr></tbody></table><ul><li><h3 id="样例-2-说明"><a href="#样例-2-说明" class="headerlink" title="[样例 2 说明]"></a>[样例 2 说明]</h3><blockquote><p>9 是 10 进制则加 1 答案为 10,为大于 10 进制时则加 1 答案为 A.</p></blockquote></li><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>N 包含 1 至 200 位数字.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"addone.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"addone.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>苟</title>
      <link href="//2016/1002/gou/"/>
      <url>//2016/1002/gou/</url>
      <content type="html"><![CDATA[<h1 id="苟-gou"><a href="#苟-gou" class="headerlink" title="苟(gou)"></a>苟(gou)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>苟先生有一个字符串,不过他的朋友富先生对他的字符串做了一些小手脚,不仅打乱了顺序而且还把一些字符变成了*,而且这个字符串混进了一大堆字符串中,苟先生想知道哪些可能是他的字符串.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行一个整数 n 表示字符串长度.<br>第二行一个只含小写字母的长度为 n 的字符串表示苟先生的串.<br>第三行一个整数 m 表示混进的字符串数量.<br>接下来 m 行每行一个长度为 n 的字符串,包含小写字母和*.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>输出一行一个 m 位的二进制数,如果第 i 个字符串可能是苟先生的,第 i位就为 1,否则为 0.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>gou.in</th><th>gou.out</th></tr></thead><tbody><tr><td>3</td><td>101</td></tr><tr><td>aba</td><td></td></tr><tr><td>3</td><td></td></tr><tr><td>aab</td><td></td></tr><tr><td>bb*</td><td></td></tr><tr><td>a**</td><td></td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>对于 40%的数据不含*;<br>对于 100%的数据 n,m≤100.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">104</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">char</span> org[N],str[N];</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">char</span> a,<span class="keyword">char</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a==<span class="string">'*'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (b==<span class="string">'*'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> a &lt; b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">op</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a,<span class="keyword">const</span> <span class="keyword">char</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>,j=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=b[j])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(cnt)</span><br><span class="line">            &#123;</span><br><span class="line">                cnt--;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"gou.in"</span>, <span class="string">"r"</span>, <span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"gou.out"</span>, <span class="string">"w"</span>, <span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,org);</span><br><span class="line">    sort(org,org+n,cmp);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,str);</span><br><span class="line">        sort(str,str+n,cmp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;n;k++)</span><br><span class="line">            <span class="keyword">if</span>(str[k]==<span class="string">'*'</span>)</span><br><span class="line">                cnt++;</span><br><span class="line">        <span class="keyword">if</span> (op(org,str))</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"1"</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>构建二叉树</title>
      <link href="//2016/1002/tree/"/>
      <url>//2016/1002/tree/</url>
      <content type="html"><![CDATA[<h1 id="构建二叉树-tree"><a href="#构建二叉树-tree" class="headerlink" title="构建二叉树(tree)"></a>构建二叉树(tree)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>树的表示方法很多,可以采用自然界的树形表示法如图,另外也可以采用括号表示法,先将根结点放入一对圆括号中,然后把它的子树按由左往右的顺序放入括号中,而对子树也采用同样的方法处理.同层子树与它的根结点用圆括号扩起来,同层子树之间用逗号格开,最后用闭括号括起来.如图所示的树可以表示成:<br>(1(2(4,5),3))<br>由完全二叉树的定义我们可知,如果知道该完全二叉树的结点个数,则可以构建出一棵确定的完全二叉树,现在输入完全二叉树的结点数 N(N≤2 <sup>14</sup> ), 用括号表示法输出这棵树.(默认树的结点名称为树结点的编号)</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>N 完全二叉树的结点个数.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>N 个结点的完全二叉树的括号表示.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>tree.in</th><th>tree.out</th></tr></thead><tbody><tr><td>5</td><td>(1(2(4,5),3))</td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&gt;n)</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,i);</span><br><span class="line">    <span class="keyword">if</span>(i*<span class="number">2</span>&lt;=n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"("</span>);</span><br><span class="line">        <span class="keyword">if</span>(i*<span class="number">2</span>&lt;=n)</span><br><span class="line">            DFS(i*<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>(i*<span class="number">2</span>+<span class="number">1</span>&lt;=n)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">","</span>);</span><br><span class="line">            DFS(i*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">")"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"tree.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"tree.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"("</span>);</span><br><span class="line">    DFS(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">")"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>矩阵相似</title>
      <link href="//2016/1002/matrix/"/>
      <url>//2016/1002/matrix/</url>
      <content type="html"><![CDATA[<h1 id="矩阵相似-matrix"><a href="#矩阵相似-matrix" class="headerlink" title="矩阵相似(matrix)"></a>矩阵相似(matrix)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>给出 2 个大小相同的矩阵方阵 A,B,方阵中的元素为 0 或 1.若 A 和 B相似,满足下面条件:</p><blockquote><ul><li>A=B –&gt; 输出 0</li><li>A 经过顺时针旋转 90°成为 B –&gt; 输出 1</li><li>A 经过顺时针旋转 180°成为 B –&gt; 输出 2</li><li>A 经过顺时针旋转 270°成为 B –&gt; 输出 3</li><li>若 A,B 不相似 –&gt; 输出-1</li></ul></blockquote></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行为一个整数 n;<br>接下来的 n 行表示 A 矩阵的 01 方阵;<br>再接下来的 n 行表示 B 矩阵的 01 方阵.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一个整数(0,或 1,或 2, 或 3,或-1)即 A,B 相似的结果.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>matrix.in</th><th>matrix.out</th></tr></thead><tbody><tr><td>4</td><td>1</td></tr><tr><td>0 0 0 0</td><td></td></tr><tr><td>0 0 0 0</td><td></td></tr><tr><td>0 1 0 0</td><td></td></tr><tr><td>0 0 0 0</td><td></td></tr><tr><td>0 0 0 0</td><td></td></tr><tr><td>0 1 0 0</td><td></td></tr><tr><td>0 0 0 0</td><td></td></tr><tr><td>0 0 0 0</td><td></td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>100%的数据:1≤n≤20</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">24</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> A,B,C,R;</span><br><span class="line"><span class="keyword">bool</span> a[N][N],b[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"matrix.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"matrix.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i][j]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            A+=(a[i][j]==b[j][n+<span class="number">1</span>-i]);</span><br><span class="line">            B+=(a[i][j]==b[n+<span class="number">1</span>-i][n+<span class="number">1</span>-j]);</span><br><span class="line">            C+=(a[i][j]==b[n+<span class="number">1</span>-j][i]);</span><br><span class="line">            R+=(a[i][j]==b[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(R==n*n)</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"0"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(A==n*n)</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"1"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(B==n*n)</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"2"</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(C==n*n)</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"3"</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">"-1"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>冰雹序列</title>
      <link href="//2016/1002/hailstone/"/>
      <url>//2016/1002/hailstone/</url>
      <content type="html"><![CDATA[<h1 id="冰雹序列-hailstone"><a href="#冰雹序列-hailstone" class="headerlink" title="冰雹序列(hailstone)"></a>冰雹序列(hailstone)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="[题目描述]:"></a>[题目描述]:</h3><blockquote><p>冰雹序列是这样形成的:<br>1,如果N为偶数,则将其除以2;<br>2,如果N为奇数,则将其乘以3在加上1;<br>这个序列最后总是在:4 2 1 循环.所以当N==1,时我们认为序列结束.<br>写一个程序,计算出序列中的最大值.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="[输入描述]:"></a>[输入描述]:</h3><blockquote><p>第一行给出P(1&lt;= P &lt;= 100,000)表示测试组数.<br>每组数据一行两个整数:第一个是测试组数;<br>第二个数是N (1 &lt;=  n  &lt;=  100,000),表示序列起始值;</p></blockquote></li><li><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="[输出描述]:"></a>[输出描述]:</h3><blockquote><p>输出每组测试一行两个整数.第一个数是测试组数;<br>第二个数是这是序列的最大值(不超过int类型).</p></blockquote></li></ul><ul><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>hailstone.in</th><th>hailstone.out</th></tr></thead><tbody><tr><td>4</td><td>1 1</td></tr><tr><td>1 1</td><td>2 16</td></tr><tr><td>2 3</td><td>3 101248</td></tr><tr><td>3 9999</td><td>4 100000</td></tr></tbody></table><p>4 100000</p><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">40000004</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="keyword">int</span> f[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mx</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;b?a:b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;N)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span>(x&amp;<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:<span class="keyword">return</span> mx(x,DFS(x/<span class="number">2</span>));</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:<span class="keyword">return</span> mx(x*<span class="number">3</span>+<span class="number">1</span>,DFS(x*<span class="number">3</span>+<span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(f[x])</span><br><span class="line">        <span class="keyword">return</span> f[x];</span><br><span class="line">    <span class="keyword">if</span>(x==<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">switch</span>(x&amp;<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:f[x]=mx(x,DFS(x/<span class="number">2</span>));<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:f[x]=mx(x*<span class="number">3</span>+<span class="number">1</span>,DFS(x*<span class="number">3</span>+<span class="number">1</span>));<span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"hailstone.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"hailstone.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> ti=<span class="number">1</span>;ti&lt;=t;ti++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%\*d%d"</span>,&amp;n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,ti,DFS(n));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>魔族密码</title>
      <link href="//2016/1002/password/"/>
      <url>//2016/1002/password/</url>
      <content type="html"><![CDATA[<h1 id="魔族密码-password"><a href="#魔族密码-password" class="headerlink" title="魔族密码(password)"></a>魔族密码(password)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="描述"><a href="#描述" class="headerlink" title="[描述]"></a>[描述]</h3><blockquote><p>风之子刚走进他的考场,就……<br>花花:当当当当~~偶是魅力女皇——花花!!^^(华丽出场,礼炮,鲜花)<br>风之子:我呕……(杀死人的眼神)快说题目!否则……<br>花花:……咦~~好冷~~我们现在要解决的是魔族的密码问题(自我陶醉:搞不好魔族里面还会有人用密码给我和菜虫写情书咧,哦活活,当然是给我的比较多拉.)魔族现在使用一种新型的密码系统.每一个密码都是一个给定的仅包含小写字母的英文单词表,每个单词至少包含1个字母,至多75个字母.如果在一个由一个词或多个词组成的表中,除了最后一个以外,每个单词都被其后的一个单词所包含,即前一个单词是后一个单词的前缀,则称词表为一个词链.例如下面单词组成了一个词链:<br>i<br>int<br>integer<br>但下面的单词不组成词链:<br>integer<br>intern<br>现在你要做的就是在一个给定的单词表中取出一些词,组成最长的词链,就是包含单词数最多的词链.将它的单词数统计出来,就得到密码了.<br>风之子:密码就是最长词链所包括的单词数阿……<br>花花:活活活,还有,这些文件的格式是,第一行为单词表中的单词数N(1&lt;=N&lt;=2000),下面每一行有一个单词,按字典顺排列,中间也没有重复的单词咧!!你要提交的文件中只要在第一行输出密码就行啦^^看你长得还不错,给你一个样例吧:</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>password.in</th><th>passeord.out</th></tr></thead><tbody><tr><td>5</td><td>4</td></tr></tbody></table><p>i<br>int<br>integer<br>intern<br>internet</p><ul><li><h3 id="时间限制"><a href="#时间限制" class="headerlink" title="[时间限制]"></a>[时间限制]</h3><blockquote><p>各个测试点1s</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码 ]"></a>[代码 ]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2004</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> f[N],ans;</span><br><span class="line"><span class="built_in">string</span> s[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">op</span><span class="params">(<span class="built_in">string</span> a,<span class="built_in">string</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.size()&gt;b.size())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;a[i];i++)</span><br><span class="line">        <span class="keyword">if</span>(a[i]!=b[i])</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"password.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"password.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">cin</span> &gt;&gt; s[i];</span><br><span class="line">    f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        f[i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">1</span>;j--)</span><br><span class="line">            <span class="keyword">if</span>(op(s[j],s[i]))</span><br><span class="line">                f[i]=max(f[i],f[j]+<span class="number">1</span>);</span><br><span class="line">        ans=ans&gt;f[i]?ans:f[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>传球游戏</title>
      <link href="//2016/1002/passball/"/>
      <url>//2016/1002/passball/</url>
      <content type="html"><![CDATA[<h1 id="传球游戏-passball"><a href="#传球游戏-passball" class="headerlink" title="传球游戏(passball)"></a>传球游戏(passball)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="[题目描述]:"></a>[题目描述]:</h3><blockquote><p>上体育课的时候,小蛮的老师经常带着同学们一起做游戏.这次,老师带着同学们一起做传球游戏.<br>游戏规则是这样的:n个同学站成一个圆圈,其中的一个同学手里拿着一个球,当老师吹哨子时开始传球,每个同学可以把球传自己左右的两个同学中的一个(左右任意),当老师再次吹哨子时,传球停止,此时,拿着球没传出去的那个同学就是败者,要大家表演一个节目.<br>聪明的小蛮提出了一个有趣的问题:有多少种不同的传球方法可以使得从小蛮手里开始传的球,传了m次以后,又回到小蛮手里两种传球方法被视作不同的方法,当且仅当这两种方法中,接到球的同学按接球顺序组成的序列是不同的.比如有三个同学1号,号,3号,并假设小蛮为1号,球传了三次回到小蛮手里的方式有1-&gt;2-&gt;3-&gt;1和1-&gt;3-&gt;2-&gt;1,共2种.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入描述"><a href="#输入描述" class="headerlink" title="[输入描述]:"></a>[输入描述]:</h3><blockquote><p>输入共一行,有两个用空格隔开的整数n,m(3&lt;=n&lt;=30,1&lt;=m&lt;=30).</p></blockquote></li><li><h3 id="输出描述"><a href="#输出描述" class="headerlink" title="[输出描述]:"></a>[输出描述]:</h3><blockquote><p>输出共一行,有一个整数,标示符合题意的方法数.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>passball.in</th><th>passball.out</th></tr></thead><tbody><tr><td>3 3</td><td>2</td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">34</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> i,<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s==<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( <span class="keyword">not</span> (f[i][s]==<span class="number">-1</span>))</span><br><span class="line">        <span class="keyword">return</span> f[i][s];</span><br><span class="line">    <span class="keyword">return</span> f[i][s]=DFS(i==n?<span class="number">1</span>:i+<span class="number">1</span>,s<span class="number">-1</span>)+DFS(i==<span class="number">1</span>?n:i<span class="number">-1</span>,s<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"passball.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"passball.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="number">-1</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; DFS(<span class="number">1</span>,m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>生产调度</title>
      <link href="//2016/1001/dispatch/"/>
      <url>//2016/1001/dispatch/</url>
      <content type="html"><![CDATA[<h1 id="生产调度-dispatch"><a href="#生产调度-dispatch" class="headerlink" title="生产调度(dispatch)"></a>生产调度(dispatch)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="描述"><a href="#描述" class="headerlink" title="[描述]"></a>[描述]</h3><blockquote><p>某工厂收到了n个产品的订单,这n个产品分别在A,B两个车间加工,并且必须先在A车间加工后才可以到B车间加工.<br>某个产品i在A,B两车间加工的时间分别为Ai,Bi.怎样安排这n个产品的加工顺序,才能使总的加工时间最短.这里所说的加工时间是指:从开始加工第一个产品到最后所有的产品都已在A,B两车间加工完毕的时间.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行仅—个数据n,表示产品的数量.<br>接下来n个数据是表示这n个产品在A车间加工各自所要的时间(都是整数).<br>最后的n个数据是表示这n个产品在B车间加工各自所要的时间(都是整数).</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>第一行一个数据,表示最少的加工时间;</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>dispatch.in</th><th>dispatch.out</th></tr></thead><tbody><tr><td>5</td><td>34</td></tr><tr><td>3 5 8 7 10</td><td></td></tr><tr><td>6 2 1 4 9</td><td></td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>100%的数据:1≤n≤1000.</p></blockquote></li><li><h3 id="来源"><a href="#来源" class="headerlink" title="[来源]"></a>[来源]</h3></li><li><del>@<a href="https://www.luogu.org/problem/show?pid=1248" target="_blank" rel="noopener">洛谷 P1248</a></del></li><li>@<a href="http://codevs.cn/problem/3008/" target="_blank" rel="noopener">Code VS 3008</a></li><li>@<a href="http://tyvj.cn/p/3016" target="_blank" rel="noopener">TYVJ P3016</a></li><li><p>@<a href="http://1572m36l09.iask.in:20808/code/problempage.php?problem_id=1702" target="_blank" rel="noopener">Ye P1702</a></p></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1004</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,id;</span><br><span class="line">&#125;m[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[N],b[N],f[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> Node&amp;a,<span class="keyword">const</span> Node&amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.x&lt;b.x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"dispatch.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"dispatch.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        m[i]=(Node)&#123;min(a[i],b[i]),i&#125;;</span><br><span class="line">    sort(m+<span class="number">1</span>,m+<span class="number">1</span>+n,cmp);</span><br><span class="line">    <span class="keyword">int</span> p1=<span class="number">1</span>,pn=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">if</span>(m[i].x==a[m[i].id])</span><br><span class="line">            f[p1++]=m[i].id;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            f[pn--]=m[i].id;</span><br><span class="line">    <span class="keyword">int</span> sa=<span class="number">0</span>,sb=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sa+=a[f[i]];</span><br><span class="line">        sb=max(sa,sb)+b[f[i]];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sb);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> 洛谷 </tag>
            
            <tag> Code VS </tag>
            
            <tag> TYVJ </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>整数拆段</title>
      <link href="//2016/1001/mult/"/>
      <url>//2016/1001/mult/</url>
      <content type="html"><![CDATA[<h1 id="整数拆段-mult"><a href="#整数拆段-mult" class="headerlink" title="整数拆段(mult)"></a>整数拆段(mult)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="描述"><a href="#描述" class="headerlink" title="[描述]"></a>[描述]</h3><blockquote><p>将一个位数为L(4≤L≤10)的自然数N拆成4段,使各段对应的数的乘积最小.你能编一个程序实现吗?</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>一个自然数N.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一个整数,最小乘积.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>mult.in</th><th>mult.out</th></tr></thead><tbody><tr><td>321457</td><td>2268</td></tr></tbody></table><ul><li><h3 id="样例-Explan"><a href="#样例-Explan" class="headerlink" title="[样例] Explan"></a>[样例] Explan</h3><blockquote><p>样例中最小乘积为:3<em>2</em>14*27=2268</p></blockquote></li><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>100%的数据满足:4≤位数L≤10.</p></blockquote></li><li><h3 id="来源"><a href="#来源" class="headerlink" title="[来源]"></a>[来源]</h3></li><li><p>@<a href="http://1572m36l09.iask.in:20808/code/problempage.php?problem_id=1701" target="_blank" rel="noopener">Ye P1701</a></p></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">long</span> <span class="keyword">long</span> INF=<span class="number">2147483647</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> mn=INF;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> b,<span class="keyword">int</span> d,<span class="keyword">long</span> <span class="keyword">long</span> tot,<span class="keyword">long</span> <span class="keyword">long</span> cnt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==s.size()+<span class="number">1</span> <span class="keyword">and</span> d==<span class="number">5</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        mn=mn&lt;cnt?mn:cnt;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(b&gt;s.size() <span class="keyword">or</span> d&gt;<span class="number">4</span>)</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    tot=tot*<span class="number">10</span>+(s[b<span class="number">-1</span>]-<span class="string">'0'</span>);</span><br><span class="line">    DFS(b+<span class="number">1</span>,d,tot,cnt);</span><br><span class="line">    DFS(b+<span class="number">1</span>,d+<span class="number">1</span>,<span class="number">0</span>,tot*cnt);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"mult.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"mult.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    DFS(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; mn &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>编号</title>
      <link href="//2016/1001/number/"/>
      <url>//2016/1001/number/</url>
      <content type="html"><![CDATA[<h1 id="编号-number"><a href="#编号-number" class="headerlink" title="编号(number)"></a>编号(number)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="描述"><a href="#描述" class="headerlink" title="[描述]"></a>[描述]</h3><blockquote><p>太郎有N只兔子,现在为了方便识别它们,太郎要给他们编号.兔子们向太郎表达了它们对号码的喜好,每个兔子i想要一个整数,介于1和MaxNumber[i]之间(包括1和MaxNumber[i]).当然,每个兔子的编号是不同的.现在太郎想知道一共有多少种编号的方法.<br>你只用输出答案mod 1000000007即可.如果这是不可能的,就输出0.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行是一个整数N(1≤N≤50).<br>第二行N个整数MaxNumber[i] (1≤MaxNumber[i]≤1000).</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一个整数 ,表示方案总数 mod 1000000007的值.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>number.in</th><th>number.out</th></tr></thead><tbody><tr><td>2</td><td>35</td></tr></tbody></table><p>5 8</p><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>100%的数据:1≤N≤50,1≤MaxNumber[i]≤1000.</p></blockquote></li><li><h3 id="来源"><a href="#来源" class="headerlink" title="[来源]"></a>[来源]</h3></li><li>@<a href="https://www.luogu.org/problem/show?pid=1866" target="_blank" rel="noopener">洛谷 P1866</a></li><li><p>@<a href="http://1572m36l09.iask.in:20808/code/problempage.php?problem_id=1700" target="_blank" rel="noopener">Ye P1700</a></p></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">54</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MOD=<span class="number">1000000007</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> a[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> tot=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"number.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"number.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        tot*=a[i]-i+<span class="number">1</span>;</span><br><span class="line">        tot%=MOD;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,tot);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
            <tag> 洛谷 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>密码解压</title>
      <link href="//2016/1001/password/"/>
      <url>//2016/1001/password/</url>
      <content type="html"><![CDATA[<h1 id="密码解压-password"><a href="#密码解压-password" class="headerlink" title="密码解压(password)"></a>密码解压(password)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="描述"><a href="#描述" class="headerlink" title="[描述]"></a>[描述]</h3><blockquote><p>为了保护日益恶劣的地球环境,地球防卫小队决定去求助外星种族的帮助.经过很长时间的努力,小队终于收到了外星生命的回信.但是外星人发过来的却是一串密码.只有解开密码,才能知道外星人给的准确回复.解开密码的第一道工序就是解压缩密码,外星人对于连续的若干个相同的子串“x”会压缩为“[DX]”的形式(D是一个整数且1≤D≤99),比如说字符串“CBCBCBCB”就压缩为“[4CB]”或者“[2[2CB]]”,类似于后面这种压缩之后再压缩的我们称之为二重压缩.如果是“[2[2[2CB]]]”,则是三重.<br>现在我们给你外星人发送的密码,请你对其进行解压缩.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>一行,包含一个字符串, 输入只包含数字,大写字母, “[“ 和 “]” .</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行,即一个解压缩后的字符串.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>password.in</th><th>password.out</th></tr></thead><tbody><tr><td>AC[3FUN]</td><td>ACFUNFUNFUN</td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>50%的数据:解压后的字符串长度在1,000以内,最多只有三重压缩.<br>100%的数据:解压后的字符串长度在20,000以内,最多只有十重压缩.</p></blockquote></li><li><h3 id="来源"><a href="#来源" class="headerlink" title="[来源]"></a>[来源]</h3></li><li><p><a href="http://1572m36l09.iask.in:20808/code/problempage.php?problem_id=1703" target="_blank" rel="noopener">Ye P1703</a></p></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">op</span><span class="params">(<span class="keyword">int</span> b,<span class="keyword">int</span> e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=b;i&lt;=e;i++)</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">'['</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">(<span class="keyword">int</span> b,<span class="keyword">int</span> e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b&gt;e)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(!op(b,e))</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=b;i&lt;=e;i++)</span><br><span class="line">            <span class="built_in">cout</span> &lt;&lt; s[i];</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> i=b;</span><br><span class="line">        <span class="keyword">while</span>(s[i]!=<span class="string">'['</span>)</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">int</span> j=i+<span class="number">1</span>,t=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(t&gt;=<span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(s[j]==<span class="string">'['</span>)</span><br><span class="line">                t++;</span><br><span class="line">            <span class="keyword">if</span>(s[j]==<span class="string">']'</span>)</span><br><span class="line">                t--;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        j--;</span><br><span class="line">        <span class="keyword">int</span> n,k;</span><br><span class="line">        <span class="keyword">for</span>(n=<span class="number">0</span>,k=i+<span class="number">1</span>;s[k]&gt;=<span class="string">'0'</span>&amp;&amp;s[k]&lt;=<span class="string">'9'</span>;k++)</span><br><span class="line">            n=n*<span class="number">10</span>+s[k]-<span class="string">'0'</span>;</span><br><span class="line">        DFS(b,i<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">while</span>(n--)</span><br><span class="line">            DFS(k,j<span class="number">-1</span>);</span><br><span class="line">        DFS(j+<span class="number">1</span>,e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"password.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"password.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">    DFS(<span class="number">0</span>,s.size()<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> daily </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 2016 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>OI</title>
      <link href="//OI%E8%BF%9B%E5%BA%A6/"/>
      <url>//OI%E8%BF%9B%E5%BA%A6/</url>
      <content type="html"><![CDATA[<h1 id="OI-Structures"><a href="#OI-Structures" class="headerlink" title="OI Structures"></a>OI Structures</h1><a id="more"></a><h3 id="1-基本数据结构"><a href="#1-基本数据结构" class="headerlink" title="1 基本数据结构"></a>1 基本数据结构</h3><ul><li style="list-style: none"><input type="checkbox" checked> 1. 数组</li><li style="list-style: none"><input type="checkbox"> 2. 链表, 双向链表</li><li style="list-style: none"><input type="checkbox" checked> 3. 队列, 单调队列, 双端队列</li><li style="list-style: none"><input type="checkbox" checked> 4. 栈, 单调栈</li></ul><h3 id="2-中级数据结构"><a href="#2-中级数据结构" class="headerlink" title="2 中级数据结构"></a>2 中级数据结构</h3><ul><li style="list-style: none"><input type="checkbox"> 1. 堆</li><li style="list-style: none"><input type="checkbox"> 2. 并查集与带权并查集</li><li style="list-style: none"><input type="checkbox"> 3. hash 表</li><li style="list-style: none"><input type="checkbox"> - 自然溢出</li><li style="list-style: none"><input type="checkbox"> - 双hash</li></ul><h3 id="3-高级数据结构"><a href="#3-高级数据结构" class="headerlink" title="3 高级数据结构"></a>3 高级数据结构</h3><ul><li style="list-style: none"><input type="checkbox"> 1. 树状数组</li><li style="list-style: none"><input type="checkbox"> 2. 线段树, 线段树合并</li><li style="list-style: none"><input type="checkbox"> 3. 平衡树</li><li style="list-style: none"><input type="checkbox"> - Treap 随机平衡二叉树</li><li style="list-style: none"><input type="checkbox"> - Splay 伸展树</li><li style="list-style: none"><input type="checkbox"> - * Scapegoat Tree 替罪羊树</li><li style="list-style: none"><input type="checkbox"> 4. 块状数组, 块状链表</li><li style="list-style: none"><input type="checkbox"> 5.* 树套树</li><li style="list-style: none"><input type="checkbox"> - 线段树套线段树</li><li style="list-style: none"><input type="checkbox"> - 线段树套平衡树</li><li style="list-style: none"><input type="checkbox"> - * 平衡树套线段树</li><li style="list-style: none"><input type="checkbox"> 6.可并堆</li><li style="list-style: none"><input type="checkbox"> - 左偏树</li><li style="list-style: none"><input type="checkbox"> - *配对堆</li><li style="list-style: none"><input type="checkbox"> 7. <em>KDtree, </em>四分树</li></ul><h3 id="4-可持久化数据结构"><a href="#4-可持久化数据结构" class="headerlink" title="4 可持久化数据结构"></a>4 可持久化数据结构</h3><ul><li style="list-style: none"><input type="checkbox"> 1. 可持久化线段树</li><li style="list-style: none"><input type="checkbox"> - 主席树</li><li style="list-style: none"><input type="checkbox"> 2. * 可持久化平衡树</li><li style="list-style: none"><input type="checkbox"> 3. * 可持久化块状数组</li></ul><h3 id="5-字符串相关算法及数据结构"><a href="#5-字符串相关算法及数据结构" class="headerlink" title="5 字符串相关算法及数据结构"></a>5 字符串相关算法及数据结构</h3><ul><li style="list-style: none"><input type="checkbox"> 1. KMP</li><li style="list-style: none"><input type="checkbox"> 2. AC 自动机</li><li style="list-style: none"><input type="checkbox"> 3. 后缀数组</li><li style="list-style: none"><input type="checkbox"> 4. *后缀树</li><li style="list-style: none"><input type="checkbox"> 5. *后缀自动机</li><li style="list-style: none"><input type="checkbox"> 6. 字典树 Trie</li><li style="list-style: none"><input type="checkbox"> 7. manacher</li></ul><h3 id="6-图论相关"><a href="#6-图论相关" class="headerlink" title="6 图论相关"></a>6 图论相关</h3><ul><li style="list-style: none"><input type="checkbox"> 1. 最小生成树</li><li style="list-style: none"><input type="checkbox"> - Prim</li><li style="list-style: none"><input type="checkbox"> - Kruskal</li><li style="list-style: none"><input type="checkbox"> 2. 最短路, 次短路, 第K短路</li><li style="list-style: none"><input type="checkbox"> - SPFA</li><li style="list-style: none"><input type="checkbox"> - Dijkstra</li><li style="list-style: none"><input type="checkbox" checked> - Floyd</li><li style="list-style: none"><input type="checkbox"> 3. 图的连通</li><li style="list-style: none"><input type="checkbox"> - 连通分量 (Tarjan)</li><li style="list-style: none"><input type="checkbox"> - 割点, 割边</li><li style="list-style: none"><input type="checkbox"> 4. 网络流</li><li style="list-style: none"><input type="checkbox"> - 最大流</li><li style="list-style: none"><input type="checkbox"> - 最小割</li><li style="list-style: none"><input type="checkbox"> - 费用流</li><li style="list-style: none"><input type="checkbox"> - 分数规划</li><li style="list-style: none"><input type="checkbox"> 5. 树相关</li><li style="list-style: none"><input type="checkbox"> - 树上倍增, 公共祖先</li><li style="list-style: none"><input type="checkbox"> - 树链剖分</li><li style="list-style: none"><input type="checkbox"> - 树的分治算法(点分治, 边分治, *动态树分治)</li><li style="list-style: none"><input type="checkbox"> - 动态树 (LCT, *树分块)</li><li style="list-style: none"><input type="checkbox"> - 虚树</li><li style="list-style: none"><input type="checkbox"> - *prufer编码</li><li style="list-style: none"><input type="checkbox"> 7. 拓扑排序</li><li style="list-style: none"><input type="checkbox"> 8. 欧拉图</li><li style="list-style: none"><input type="checkbox"> 9. 二分图</li><li style="list-style: none"><input type="checkbox"> - *KM算法</li><li style="list-style: none"><input type="checkbox"> - 匈牙利算法</li></ul><h3 id="7-数学相关"><a href="#7-数学相关" class="headerlink" title="7 数学相关"></a>7 数学相关</h3><ul><li style="list-style: none"><input type="checkbox"> 1. (扩展)欧几里得算法, 筛法, 快速幂</li><li style="list-style: none"><input type="checkbox"> - 斐蜀定理</li><li style="list-style: none"><input type="checkbox"> - 更相减损术</li><li style="list-style: none"><input type="checkbox"> 2. 欧拉函数与*降幂大法</li><li style="list-style: none"><input type="checkbox"> 3. 费马小定理</li><li style="list-style: none"><input type="checkbox"> 4. 排列组合</li><li style="list-style: none"><input type="checkbox"> - lucas定理</li><li style="list-style: none"><input type="checkbox"> 5. 乘法逆元</li><li style="list-style: none"><input type="checkbox"> 6. 矩阵乘法</li><li style="list-style: none"><input type="checkbox"> 7. 数学期望与概率</li><li style="list-style: none"><input type="checkbox"> 8. 博弈论</li><li style="list-style: none"><input type="checkbox"> - sg函数</li><li style="list-style: none"><input type="checkbox"> - 树上删边游戏</li><li style="list-style: none"><input type="checkbox"> 9. *拉格朗日乘子法</li><li style="list-style: none"><input type="checkbox"> 10. 中国剩余定理</li><li style="list-style: none"><input type="checkbox"> 11. 线性规划与网络流</li><li style="list-style: none"><input type="checkbox"> 12. 单纯型线性规划</li><li style="list-style: none"><input type="checkbox"> 13. 辛普森积分</li><li style="list-style: none"><input type="checkbox"> 14. 模线性方程组</li><li style="list-style: none"><input type="checkbox"> 15. 容斥原理与莫比乌斯反演</li><li style="list-style: none"><input type="checkbox"> 16. 置换群</li><li style="list-style: none"><input type="checkbox"> 17. 快速傅里叶变换</li><li style="list-style: none"><input type="checkbox"> 18. *大步小步法(BSGS), 扩展BSGS</li></ul><h3 id="8-动态规划"><a href="#8-动态规划" class="headerlink" title="8 动态规划"></a>8 动态规划</h3><ul><li style="list-style: none"><input type="checkbox"> 1. 一般, 背包, 状压, 区间, 环形, 树形, 数位动态规划</li><li style="list-style: none"><input type="checkbox"> - 记忆化搜索</li><li style="list-style: none"><input type="checkbox"> - 斯坦纳树</li><li style="list-style: none"><input type="checkbox"> - 背包九讲</li><li style="list-style: none"><input type="checkbox"> 2. 斜率优化与* 四边形不等式优化</li><li style="list-style: none"><input type="checkbox"> 3. 环 - 外向树上的动态规划</li><li style="list-style: none"><input type="checkbox"> 4. *插头动态规划</li></ul><h3 id="9-计算几何"><a href="#9-计算几何" class="headerlink" title="9 计算几何"></a>9 计算几何</h3><ul><li style="list-style: none"><input type="checkbox"> 1. 计算几何基础</li><li style="list-style: none"><input type="checkbox"> 2. 三维计算几何初步</li><li style="list-style: none"><input type="checkbox"> 3. *梯形剖分与三角形剖分</li><li style="list-style: none"><input type="checkbox"> 4. 旋转卡壳</li><li style="list-style: none"><input type="checkbox"> 5. 半平面交</li><li style="list-style: none"><input type="checkbox"> 6. pick定理</li><li style="list-style: none"><input type="checkbox"> 7. 扫描线</li></ul><h3 id="10-搜索相关"><a href="#10-搜索相关" class="headerlink" title="10 搜索相关"></a>10 搜索相关</h3><ul><li style="list-style: none"><input type="checkbox"> 1. BFS, DFS</li><li style="list-style: none"><input type="checkbox"> 2. A* 算法</li><li style="list-style: none"><input type="checkbox"> 3. 迭代加深搜索, 双向广搜</li></ul><h3 id="11-特殊算法"><a href="#11-特殊算法" class="headerlink" title="11 特殊算法"></a>11 特殊算法</h3><ul><li style="list-style: none"><input type="checkbox"> 1. 莫队算法, *树上莫队</li><li style="list-style: none"><input type="checkbox"> 2. 模拟退火</li><li style="list-style: none"><input type="checkbox"> 3. 爬山算法</li><li style="list-style: none"><input type="checkbox"> 4. 随机增量法</li></ul><h3 id="12-其它重要工具与方法"><a href="#12-其它重要工具与方法" class="headerlink" title="12 其它重要工具与方法"></a>12 其它重要工具与方法</h3><ul><li style="list-style: none"><input type="checkbox"> 1.模拟与贪心</li><li style="list-style: none"><input type="checkbox"> 2. 二分, 三分法(求偏导)</li><li style="list-style: none"><input type="checkbox"> 3. 分治, CDQ分治</li><li style="list-style: none"><input type="checkbox"> 4. 高精度</li><li style="list-style: none"><input type="checkbox"> 5. 离线</li><li style="list-style: none"><input type="checkbox"> 6. ST表</li></ul><h3 id="13-STL"><a href="#13-STL" class="headerlink" title="13 STL"></a>13 STL</h3><ul><li style="list-style: none"><input type="checkbox"> 1. map</li><li style="list-style: none"><input type="checkbox"> 2. priority_queue</li><li style="list-style: none"><input type="checkbox"> 3. set</li><li style="list-style: none"><input type="checkbox"> 4. bitset</li><li style="list-style: none"><input type="checkbox"> 5. rope</li></ul><h3 id="14-非常见算法"><a href="#14-非常见算法" class="headerlink" title="14 非常见算法"></a>14 非常见算法</h3><ul><li style="list-style: none"><input type="checkbox"> 1. *朱刘算法</li><li style="list-style: none"><input type="checkbox"> 2. *弦图与区间图</li></ul>]]></content>
      
      
    </entry>
    
    <entry>
      <title>a+b Problem</title>
      <link href="//a+b_Problem/"/>
      <url>//a+b_Problem/</url>
      <content type="html"><![CDATA[<h1 id="经典-a-b-Problem"><a href="#经典-a-b-Problem" class="headerlink" title="经典 a+b Problem"></a>经典 a+b Problem</h1><hr><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a,b;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; a+b &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> easy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> easy </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
