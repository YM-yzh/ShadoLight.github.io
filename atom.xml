<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ender</title>
  
  <subtitle>Use the code to terminate the world.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://y_m.coding.me/"/>
  <updated>2018-07-09T12:12:40.207Z</updated>
  <id>https://y_m.coding.me/</id>
  
  <author>
    <name>筱影志</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>光</title>
    <link href="https://y_m.coding.me//2016/1006/guang/"/>
    <id>https://y_m.coding.me//2016/1006/guang/</id>
    <published>2016-10-06T09:17:29.000Z</published>
    <updated>2018-07-09T12:12:40.207Z</updated>
    
    <content type="html"><![CDATA[<h1 id="光-guang"><a href="#光-guang" class="headerlink" title="光(guang)"></a>光(guang)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>小 S 对神的高傲感到了厌烦,她把神域改造成了一个微型世界,这个世界有 n 个关键点,有 m 条边连接这 n 个关键点,其中每条边都有一个光的通过时间,小 S 会进行测试,将一道圣光沿某条最短的路径从 1 传播到 n,每条边上的微型生命都想看到圣光,他们想知道至少将这条边的光的通过时间缩短多少才能保证看到圣光(此时他们不会考虑其它边的变化).</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行两个正整数 n 和 m.接下来 m 行每行三个正整数 u,v,w,表示这条边从 u 指向 v,原先的通过时间为 w.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>m 行,依次给出每条边的答案,注意缩短的时间必须是整数且缩短后的值必须为正,如果这条边上的人一定见不到圣光则输出-1.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>guang.in</th><th>guang.out</th></tr></thead><tbody><tr><td>3 3</td><td>0</td></tr><tr><td>1 3 2</td><td>2</td></tr><tr><td>1 3 3</td><td>-1</td></tr><tr><td>2 3 1</td><td></td></tr></tbody></table><ul><li><h3 id="样例解释"><a href="#样例解释" class="headerlink" title="[样例解释]"></a>[样例解释]</h3><blockquote><p>边 u=1,v=3,w=2 就是 1 到 3 的最短路,所以缩短的时间为 0;边 u=1,v=3,w=3 必须把 w 缩短 2 后变成 1 才是 1 到 3 的最短路;边 u=2,v=3,w=1 无论 w 怎么缩短都不会变成 1 到 3 的最短路,所以输出-1.</p></blockquote></li><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>60%的数据:n≤100;<br>80%的数据:n≤1000;<br>100%的数据:n≤10000,w≤10<sup>9</sup>;</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;光-guang&quot;&gt;&lt;a href=&quot;#光-guang&quot; class=&quot;headerlink&quot; title=&quot;光(guang)&quot;&gt;&lt;/a&gt;光(guang)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;小 S 对神的高傲感到了厌烦,她把神域改造成了一个微型世界,这个世界有 n 个关键点,有 m 条边连接这 n 个关键点,其中每条边都有一个光的通过时间,小 S 会进行测试,将一道圣光沿某条最短的路径从 1 传播到 n,每条边上的微型生命都想看到圣光,他们想知道至少将这条边的光的通过时间缩短多少才能保证看到圣光(此时他们不会考虑其它边的变化).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>神</title>
    <link href="https://y_m.coding.me//2016/1006/shen/"/>
    <id>https://y_m.coding.me//2016/1006/shen/</id>
    <published>2016-10-06T09:11:30.000Z</published>
    <updated>2018-07-09T12:12:40.209Z</updated>
    
    <content type="html"><![CDATA[<h1 id="神-shen"><a href="#神-shen" class="headerlink" title="神(shen)"></a>神(shen)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>击败恶魔后,小 S 发现了一片 n*n 的神域,神是高傲的,他们总是斜着站且不希望自己的左右或前方有其它的神,现在小 S 想知道这片神域里最多能存在多少个神.下图是一个示例,S 位置是一个面朝右上的神,S 和 X 的位置不能再放其它的神,注意神一定是斜着的.</p></blockquote></li></ul><a id="more"></a><p><img src="../../../images/shen.png" alt="shen"></p><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行一个正整数 T 表示测试数据组数.接下来 T 行每行一个正整数 n.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>对每组数据输出一行一个整数表示答案.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>shen.in</th><th>shen.out</th></tr></thead><tbody><tr><td>1</td><td>4</td></tr><tr><td>2</td><td></td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>20%的数据:n≤4;<br>40%的数据:n≤5;<br>60%的数据:n≤6;<br>80%的数据:n≤7;<br>100%的数据:T≤10,N≤8.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> AC[<span class="number">8</span>]=&#123;<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">8</span>,<span class="number">11</span>,<span class="number">14</span>,<span class="number">17</span>,<span class="number">20</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"shen.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"shen.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">    <span class="keyword">while</span>(t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,AC[n<span class="number">-1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;神-shen&quot;&gt;&lt;a href=&quot;#神-shen&quot; class=&quot;headerlink&quot; title=&quot;神(shen)&quot;&gt;&lt;/a&gt;神(shen)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;击败恶魔后,小 S 发现了一片 n*n 的神域,神是高傲的,他们总是斜着站且不希望自己的左右或前方有其它的神,现在小 S 想知道这片神域里最多能存在多少个神.下图是一个示例,S 位置是一个面朝右上的神,S 和 X 的位置不能再放其它的神,注意神一定是斜着的.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>魔</title>
    <link href="https://y_m.coding.me//2016/1006/mo/"/>
    <id>https://y_m.coding.me//2016/1006/mo/</id>
    <published>2016-10-06T08:39:38.000Z</published>
    <updated>2018-07-09T12:12:40.213Z</updated>
    
    <content type="html"><![CDATA[<h1 id="魔-mo"><a href="#魔-mo" class="headerlink" title="魔(mo)"></a>魔(mo)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>有 n 个恶魔降临了…小 S 决定打击这些恶魔,她的魔法能在一瞬间同时杀死任意数量的恶魔,但是有些恶魔之间存在保护关系,比如恶魔 A 保护恶魔 B,则如果 A 不死则 B 不受伤害,现在小 S 想知道最少需要使用多少次魔法才能杀死所有恶魔,如果不能杀死所有恶魔,输出-1.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行两个个正整数 n 和 m 分别表示恶魔数和保护关系对数.接下来 m 行每行两个数 A 和 B 描述一对保护关系.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行一个整数表示答案.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>mo.in</th><th>mo.out</th></tr></thead><tbody><tr><td>3 2</td><td>2</td></tr><tr><td>1 2</td><td></td></tr><tr><td>3 2</td><td></td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>20%的数据:n≤10;<br>40%的数据:n≤100;<br>60%的数据:n≤1000;<br>80%的数据:n≤10000;<br>100%的数据:n≤100000.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"deque"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1e+5</span> +<span class="number">4</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Demon</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> id;</span><br><span class="line"><span class="keyword">int</span> no;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> De[N];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> ft[N],nt[N],ed[N];</span><br><span class="line"><span class="keyword">bool</span> vis[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> TNT)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">nt[TNT]=ft[u];</span><br><span class="line">ft[u]=TNT;</span><br><span class="line">ed[TNT]=v;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">topo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">deque</span>&lt;Demon&gt; q;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span>(De[i]==<span class="number">0</span>)</span><br><span class="line">q.push_back((Demon)&#123;i,<span class="number">1</span>&#125;);</span><br><span class="line"><span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(q.size())</span><br><span class="line">&#123;</span><br><span class="line">Demon t=q.front();</span><br><span class="line">ans=t.no;</span><br><span class="line">tot++;</span><br><span class="line">q.pop_front();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=ft[t.id];i;i=nt[i])</span><br><span class="line">&#123;</span><br><span class="line">De[ed[i]]--;</span><br><span class="line"><span class="keyword">if</span>(De[ed[i]]==<span class="number">0</span>)</span><br><span class="line">q.push_back((Demon)&#123;ed[i],t.no+<span class="number">1</span>&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> tot&lt;n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"mo.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"mo.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,a,b;i&lt;=m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">add(a,b,i);</span><br><span class="line">De[b]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(topo())</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">"-1"</span>) <span class="keyword">and</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans) <span class="keyword">and</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;魔-mo&quot;&gt;&lt;a href=&quot;#魔-mo&quot; class=&quot;headerlink&quot; title=&quot;魔(mo)&quot;&gt;&lt;/a&gt;魔(mo)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;有 n 个恶魔降临了…小 S 决定打击这些恶魔,她的魔法能在一瞬间同时杀死任意数量的恶魔,但是有些恶魔之间存在保护关系,比如恶魔 A 保护恶魔 B,则如果 A 不死则 B 不受伤害,现在小 S 想知道最少需要使用多少次魔法才能杀死所有恶魔,如果不能杀死所有恶魔,输出-1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>恶</title>
    <link href="https://y_m.coding.me//2016/1006/e/"/>
    <id>https://y_m.coding.me//2016/1006/e/</id>
    <published>2016-10-06T06:31:46.000Z</published>
    <updated>2018-07-09T12:12:40.208Z</updated>
    
    <content type="html"><![CDATA[<h1 id="恶-e"><a href="#恶-e" class="headerlink" title="恶(e)"></a>恶(e)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>有 n 个恶魔就要诞生了,恶魔头子要给每个即将诞生的恶魔取一个名字,恶魔秘书给恶魔头子提供了 n 个字符串供参考,由于每个字符串单词都很长,恶魔头子想到先把单词化简一下,方法是把每个单词尽量取短些的前缀,但所取的前缀不能是其它单词的前缀.这个任务现在就交给你来完成.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行一个整数 N,表示单词个数.下面有 N 行,每行一个单词,每个单词的长度不超过 50,且都是由小写字母组成,保证所给单词没有一个单词是另一个单词的前缀.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>共 N 行,每行一个单词,是对应上面的 N 个单词化简后的单词.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>e.in</th><th>e.out</th></tr></thead><tbody><tr><td>3</td><td>a</td></tr><tr><td>abc</td><td>e</td></tr><tr><td>efg</td><td>i</td></tr><tr><td>ijh</td><td></td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>100%的数据:1 ≤N ≤50.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">54</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> name[N][N];</span><br><span class="line"><span class="keyword">char</span> ans[N],tmp[N];</span><br><span class="line"><span class="keyword">bool</span> avail;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"e.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"e.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,name[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> len=<span class="built_in">strlen</span>(name[i]);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=len;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">strcpy</span>(ans,name[i]);</span><br><span class="line">            ans[j]=<span class="string">'\0'</span>;</span><br><span class="line">            avail=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(k==i)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                <span class="built_in">strcpy</span>(tmp,name[k]);</span><br><span class="line">                tmp[j]=<span class="string">'\0'</span>;</span><br><span class="line">                <span class="keyword">if</span>(!<span class="built_in">strcmp</span>(ans,tmp))</span><br><span class="line">                &#123;</span><br><span class="line">                    avail=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(avail)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,ans);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;恶-e&quot;&gt;&lt;a href=&quot;#恶-e&quot; class=&quot;headerlink&quot; title=&quot;恶(e)&quot;&gt;&lt;/a&gt;恶(e)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;有 n 个恶魔就要诞生了,恶魔头子要给每个即将诞生的恶魔取一个名字,恶魔秘书给恶魔头子提供了 n 个字符串供参考,由于每个字符串单词都很长,恶魔头子想到先把单词化简一下,方法是把每个单词尽量取短些的前缀,但所取的前缀不能是其它单词的前缀.这个任务现在就交给你来完成.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>风</title>
    <link href="https://y_m.coding.me//2016/1005/feng/"/>
    <id>https://y_m.coding.me//2016/1005/feng/</id>
    <published>2016-10-05T09:32:27.000Z</published>
    <updated>2018-07-09T12:12:40.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="风-feng"><a href="#风-feng" class="headerlink" title="风(feng)"></a>风(feng)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>起风了,风中飘着很多数字对,小 S 认为,只有满足某种特定关系的数字对才能飘得更远,现在她想知道满足 a+b&lt;=n,且 ab/(a+b)是整数的正整数对(a,b)有多少.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>一行一个正整数 n.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行一个整数表示答案.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>feng.in</th><th>feng.out</th></tr></thead><tbody><tr><td>21</td><td>11</td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>40%的数据:n≤10^3;60%的数据:n≤10^5;80%的数据:n≤10^7;100%的数据:n≤10^12;</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;风-feng&quot;&gt;&lt;a href=&quot;#风-feng&quot; class=&quot;headerlink&quot; title=&quot;风(feng)&quot;&gt;&lt;/a&gt;风(feng)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;起风了,风中飘着很多数字对,小 S 认为,只有满足某种特定关系的数字对才能飘得更远,现在她想知道满足 a+b&amp;lt;=n,且 ab/(a+b)是整数的正整数对(a,b)有多少.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>水</title>
    <link href="https://y_m.coding.me//2016/1005/shui/"/>
    <id>https://y_m.coding.me//2016/1005/shui/</id>
    <published>2016-10-05T09:28:27.000Z</published>
    <updated>2018-07-09T12:12:40.214Z</updated>
    
    <content type="html"><![CDATA[<h1 id="水-shui"><a href="#水-shui" class="headerlink" title="水(shui)"></a>水(shui)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>小 S 有一个水瓶,里面装有一定量的水,由于某些原因,她只记得水瓶里的水在[L,R]区间内,小 S 还有两个水杯,她每次可以往一个杯子里倒任意数量的水(可以不是整数),如果不足则全部倒完,现在她想知道至少需要多少次操作才能保证对于[L,R]中的每个数,操作完成后水瓶里剩的水不超过 1,且两个杯子里水量的差也不超过 1.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行一个正整数 T 表示测试数据组数.接下来 T 行每行两个非负整数 L 和 R.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>对每组数据输出一行一个整数表示答案.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>shui.in</th><th>shui.out</th></tr></thead><tbody><tr><td>2</td><td>2</td></tr><tr><td>3 5</td><td>3</td></tr><tr><td>8 13</td><td></td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>20%的数据:L≤R≤10;<br>另有 20%的数据:L=R;<br>另有 20%的数据:L=0;<br>100%的数据:T≤10000,L≤R≤10^9.</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;水-shui&quot;&gt;&lt;a href=&quot;#水-shui&quot; class=&quot;headerlink&quot; title=&quot;水(shui)&quot;&gt;&lt;/a&gt;水(shui)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;小 S 有一个水瓶,里面装有一定量的水,由于某些原因,她只记得水瓶里的水在[L,R]区间内,小 S 还有两个水杯,她每次可以往一个杯子里倒任意数量的水(可以不是整数),如果不足则全部倒完,现在她想知道至少需要多少次操作才能保证对于[L,R]中的每个数,操作完成后水瓶里剩的水不超过 1,且两个杯子里水量的差也不超过 1.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>地</title>
    <link href="https://y_m.coding.me//2016/1005/di/"/>
    <id>https://y_m.coding.me//2016/1005/di/</id>
    <published>2016-10-05T09:24:27.000Z</published>
    <updated>2018-07-09T12:12:40.202Z</updated>
    
    <content type="html"><![CDATA[<h1 id="地-di"><a href="#地-di" class="headerlink" title="地(di)"></a>地(di)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>地上有一块 n*n 的棋盘,小 S 决定在上面放棋子,使任意两个棋子都不在同一行或同一列或同一斜线,由于小 S 不想思考,她决定逐行且在每行从左往右考虑格子,如果能放棋子就放上棋子,现在她想知道这样会放上多少个棋子.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>一行一个正整数 n.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行一个整数表示答案.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>di.in</th><th>di.out</th></tr></thead><tbody><tr><td>5</td><td>5</td></tr></tbody></table><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>40%的数据:n≤1000;60%的数据:n≤20000;80%的数据:n≤30000;100%的数据:n≤40000.</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;地-di&quot;&gt;&lt;a href=&quot;#地-di&quot; class=&quot;headerlink&quot; title=&quot;地(di)&quot;&gt;&lt;/a&gt;地(di)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;地上有一块 n*n 的棋盘,小 S 决定在上面放棋子,使任意两个棋子都不在同一行或同一列或同一斜线,由于小 S 不想思考,她决定逐行且在每行从左往右考虑格子,如果能放棋子就放上棋子,现在她想知道这样会放上多少个棋子.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>数</title>
    <link href="https://y_m.coding.me//2016/1005/shu/"/>
    <id>https://y_m.coding.me//2016/1005/shu/</id>
    <published>2016-10-05T09:21:27.000Z</published>
    <updated>2018-07-09T12:12:40.210Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数-shu"><a href="#数-shu" class="headerlink" title="数(shu)"></a>数(shu)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>将 N 个整数排成一行,每个整数 a[i]的值在(-10000 ≤ a[i] ≤10000).然后从这一行数中进行取数,其规则是:可从这一行中的任何一个位置开始取数,到任何位置结束,但不能不取.找出一种取法,使得取得的和为最大,再找出一种取法,使得取得的和为最小.例如: N=4, 4 个数依次为:13,-6,7,-8 取得和为最大的是:13+(-6)+7=14 取得和为最小的是:-8.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行有一个整数 N,第二行为 N 个整数.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>输出二行,第一行一个整数表示取得和的最大值,第二行一个整数表示取得和的最小值.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>shu.in</th><th>shu.out</th></tr></thead><tbody><tr><td>4</td><td>14</td></tr><tr><td>13 -6 7 -8</td><td>-8</td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">2147483647</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> mx=-INF,mn=+INF;</span><br><span class="line"><span class="keyword">int</span> mxs,mns;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"shu.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"shu.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a);</span><br><span class="line">        mxs=mxs+a&lt;<span class="number">0</span>?<span class="number">0</span>:mxs+a;</span><br><span class="line">        mns=mns+a&gt;<span class="number">0</span>?<span class="number">0</span>:mns+a;</span><br><span class="line">        mx=mx&gt;mxs?mx:mxs;</span><br><span class="line">        mn=mn&lt;mns?mn:mns;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n%d\n"</span>,mx,mn);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;数-shu&quot;&gt;&lt;a href=&quot;#数-shu&quot; class=&quot;headerlink&quot; title=&quot;数(shu)&quot;&gt;&lt;/a&gt;数(shu)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;将 N 个整数排成一行,每个整数 a[i]的值在(-10000 ≤ a[i] ≤10000).然后从这一行数中进行取数,其规则是:可从这一行中的任何一个位置开始取数,到任何位置结束,但不能不取.找出一种取法,使得取得的和为最大,再找出一种取法,使得取得的和为最小.例如: N=4, 4 个数依次为:13,-6,7,-8 取得和为最大的是:13+(-6)+7=14 取得和为最小的是:-8.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>回文串</title>
    <link href="https://y_m.coding.me//2016/1005/palind/"/>
    <id>https://y_m.coding.me//2016/1005/palind/</id>
    <published>2016-10-05T05:07:37.000Z</published>
    <updated>2018-07-09T12:12:40.211Z</updated>
    
    <content type="html"><![CDATA[<h1 id="回文串-palind"><a href="#回文串-palind" class="headerlink" title="回文串(palind)"></a>回文串(palind)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>输入一个只由大小写字母,数字组成的字符串,计算至少添加几个字符才能使得它变成一个回文串.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行为正整数t(≤5),表示数据组数;接下来t行,每行一个只由大小写字母和数字组成的字符串,长度不超过5000.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>对于每组数据,输出最少添加字符数.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>palind.in</th><th>palind.out</th></tr></thead><tbody><tr><td>2</td><td>2</td></tr><tr><td>Ab3bd</td><td>2</td></tr><tr><td>abcdcda</td><td></td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">5004</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="keyword">char</span> a[N],b[N];</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"palind.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"palind.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,a);</span><br><span class="line">n=<span class="built_in">strlen</span>(a);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">f[i][<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">b[n-i]=a[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">f[<span class="number">0</span>][i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i<span class="number">-1</span>]==b[j<span class="number">-1</span>])</span><br><span class="line">f[i][j]=f[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">f[i][j]=max(f[i<span class="number">-1</span>][j],f[i][j<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,n-f[n][n]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;回文串-palind&quot;&gt;&lt;a href=&quot;#回文串-palind&quot; class=&quot;headerlink&quot; title=&quot;回文串(palind)&quot;&gt;&lt;/a&gt;回文串(palind)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;输入一个只由大小写字母,数字组成的字符串,计算至少添加几个字符才能使得它变成一个回文串.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>能量项链</title>
    <link href="https://y_m.coding.me//2016/1005/energy/"/>
    <id>https://y_m.coding.me//2016/1005/energy/</id>
    <published>2016-10-05T05:04:15.000Z</published>
    <updated>2018-07-09T12:12:40.212Z</updated>
    
    <content type="html"><![CDATA[<h1 id="能量项链-energy"><a href="#能量项链-energy" class="headerlink" title="能量项链(energy)"></a>能量项链(energy)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>在Mars星球上,每个Mars人都随身佩带着一串能量项链.在项链上有N颗能量珠.能量珠是一颗有头标记与尾标记的珠子,这些标记对应着某个正整数.并且,对于相邻的两颗珠子,前一颗珠子的尾标记一定等于后一颗珠子的头标记.因为只有这样,通过吸盘(吸盘是Mars人吸收能量的一种器官)的作用,这两颗珠子才能聚合成一颗珠子,同时释放出可以被吸盘吸收的能量.如果前一颗能量珠的头标记为m,尾标记为r,后一颗能量珠的头标记为r,尾标记为n,则聚合后释放的能量为(Mars单位),新产生的珠子的头标记为m,尾标记为n.<br>需要时,Mars人就用吸盘夹住相邻的两颗珠子,通过聚合得到能量,直到项链上只剩下一颗珠子为止.显然,不同的聚合顺序得到的总能量是不同的,请你设计一个聚合顺序,使一串项链释放出的总能量最大.<br>例如:设N=4,4颗珠子的头标记与尾标记依次为(2,3) (3,5) (5,10) (10,2).我们用记号⊕表示两颗珠子的聚合操作,(j⊕k)表示第j,k两颗珠子聚合后所释放的能量.则第4,1两颗珠子聚合后释放的能量为:<br>(4⊕1)=10<em>2</em>3=60.<br>这一串项链可以得到最优值的一个聚合顺序所释放的总能量为<br>((4⊕1)⊕2)⊕3)=10<em>2</em>3+10<em>3</em>5+10<em>5</em>10=710.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行是一个正整数N(4≤N≤100),表示项链上珠子的个数.第二行是N个用空格隔开的正整数,所有的数均不超过1000,第i个数为第i颗珠子的头标记(1≤i≤N),当i&lt;N时,第i颗珠子的尾标记应该等于第i+1颗珠子的头标记.第N颗珠子的尾标记应该等于第1颗珠子的头标记.<br>至于珠子的顺序,你可以这样确定:将项链放到桌面上,不要出现交叉,随意指定第一颗珠子,然后按顺时针方向确定其他珠子的顺序.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>只有一个正整数E(E≤2.1*109),为一个最优聚合顺序所释放的总能量.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>energy.in</th><th>energy.out</th></tr></thead><tbody><tr><td>4</td><td>710</td></tr><tr><td>2 3 5 10</td><td></td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">104</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">2147483647</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,ans;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2</span>*N];</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"energy.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"energy.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">a[n+i]=a[i];</span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">2</span>*n+<span class="number">1</span>]=a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> ai=<span class="number">1</span>;ai&lt;=n;ai++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-l+<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j=i+l<span class="number">-1</span>;</span><br><span class="line">f[i][j]=-INF;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">f[i][j]=max(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]+a[i+ai]*a[k+ai+<span class="number">1</span>]*a[j+ai+<span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=max(ans,f[<span class="number">1</span>][n]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; ans &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;能量项链-energy&quot;&gt;&lt;a href=&quot;#能量项链-energy&quot; class=&quot;headerlink&quot; title=&quot;能量项链(energy)&quot;&gt;&lt;/a&gt;能量项链(energy)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;在Mars星球上,每个Mars人都随身佩带着一串能量项链.在项链上有N颗能量珠.能量珠是一颗有头标记与尾标记的珠子,这些标记对应着某个正整数.并且,对于相邻的两颗珠子,前一颗珠子的尾标记一定等于后一颗珠子的头标记.因为只有这样,通过吸盘(吸盘是Mars人吸收能量的一种器官)的作用,这两颗珠子才能聚合成一颗珠子,同时释放出可以被吸盘吸收的能量.如果前一颗能量珠的头标记为m,尾标记为r,后一颗能量珠的头标记为r,尾标记为n,则聚合后释放的能量为(Mars单位),新产生的珠子的头标记为m,尾标记为n.&lt;br&gt;需要时,Mars人就用吸盘夹住相邻的两颗珠子,通过聚合得到能量,直到项链上只剩下一颗珠子为止.显然,不同的聚合顺序得到的总能量是不同的,请你设计一个聚合顺序,使一串项链释放出的总能量最大.&lt;br&gt;例如:设N=4,4颗珠子的头标记与尾标记依次为(2,3) (3,5) (5,10) (10,2).我们用记号⊕表示两颗珠子的聚合操作,(j⊕k)表示第j,k两颗珠子聚合后所释放的能量.则第4,1两颗珠子聚合后释放的能量为:&lt;br&gt;(4⊕1)=10&lt;em&gt;2&lt;/em&gt;3=60.&lt;br&gt;这一串项链可以得到最优值的一个聚合顺序所释放的总能量为&lt;br&gt;((4⊕1)⊕2)⊕3)=10&lt;em&gt;2&lt;/em&gt;3+10&lt;em&gt;3&lt;/em&gt;5+10&lt;em&gt;5&lt;/em&gt;10=710.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>石子合并</title>
    <link href="https://y_m.coding.me//2016/1005/stones/"/>
    <id>https://y_m.coding.me//2016/1005/stones/</id>
    <published>2016-10-05T04:59:29.000Z</published>
    <updated>2018-07-09T12:12:40.206Z</updated>
    
    <content type="html"><![CDATA[<h1 id="石子合并-stones"><a href="#石子合并-stones" class="headerlink" title="石子合并(stones)"></a>石子合并(stones)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>有N(≤200)堆石子排成一排,每堆石子有一定的数量.现要将N堆石子合并成为一堆.合并的过程只能每次将相邻的两堆石子堆成一堆,每次合并花费的代价为这两堆石子的和,经过N-1次合并后成为一堆.求出总的代价最小值.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行为正整数t(≤5),表示数据组数;每组数据中,第一行为正整数n(≤200),表示石子总数,第二行为以空格隔开的n个正整数ai(≤1000),分别表示每堆石子的个数.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>对于每组数据,输出最小总代价.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>stones.in</th><th>stones.out</th></tr></thead><tbody><tr><td>2</td><td>9</td></tr><tr><td>3</td><td>239</td></tr><tr><td>1 2 3</td><td></td></tr><tr><td>7</td><td></td></tr><tr><td>13 7 8 16 21 4 18</td><td></td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">204</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">2147483647</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"><span class="keyword">int</span> a[N],s[N];</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"stones.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"stones.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">s[i]=s[i<span class="number">-1</span>]+a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span>(f));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">2</span>;l&lt;=n;l++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-l+<span class="number">1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> j=i+l<span class="number">-1</span>;</span><br><span class="line">f[i][j]=INF;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;j;k++)</span><br><span class="line">f[i][j]=min(f[i][j],f[i][k]+f[k+<span class="number">1</span>][j]+s[j]-s[i<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; f[<span class="number">1</span>][n] &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;石子合并-stones&quot;&gt;&lt;a href=&quot;#石子合并-stones&quot; class=&quot;headerlink&quot; title=&quot;石子合并(stones)&quot;&gt;&lt;/a&gt;石子合并(stones)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;有N(≤200)堆石子排成一排,每堆石子有一定的数量.现要将N堆石子合并成为一堆.合并的过程只能每次将相邻的两堆石子堆成一堆,每次合并花费的代价为这两堆石子的和,经过N-1次合并后成为一堆.求出总的代价最小值.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>编辑距离</title>
    <link href="https://y_m.coding.me//2016/1005/dist/"/>
    <id>https://y_m.coding.me//2016/1005/dist/</id>
    <published>2016-10-05T04:56:43.000Z</published>
    <updated>2018-07-09T12:12:40.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="编辑距离-dist"><a href="#编辑距离-dist" class="headerlink" title="编辑距离(dist)"></a>编辑距离(dist)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>编辑距离是指两个字串之间,由一个转成另一个所需的最少编辑操作次数,允许的编辑操作包括:将一个字符替换成另一个字符,插入一个字符,删除一个字符.给出两个字符串s1和s2,找出它们之间的编辑距离,即由字符串s1最少经过多少步操作变成字符串s2.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>两行字符串,全部由小写字母组成,长度均不超过1000.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>只包含一个整数,表示两个字符串的编辑距离.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>dist.in</th><th>dist.out</th></tr></thead><tbody><tr><td>abcde</td><td>4</td></tr><tr><td>acefg</td><td></td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"string"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">1004</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> a,b;</span><br><span class="line"><span class="keyword">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"dist.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"dist.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;a[i<span class="number">-1</span>];i++)</span><br><span class="line">f[i][<span class="number">0</span>]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;b[i<span class="number">-1</span>];i++)</span><br><span class="line">f[<span class="number">0</span>][i]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;a[i<span class="number">-1</span>];i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;b[j<span class="number">-1</span>];j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a[i<span class="number">-1</span>]==b[j<span class="number">-1</span>])</span><br><span class="line">c=<span class="number">0</span>;</span><br><span class="line">f[i][j]=min(f[i<span class="number">-1</span>][j]+<span class="number">1</span>,min(f[i][j<span class="number">-1</span>]+<span class="number">1</span>,f[i<span class="number">-1</span>][j<span class="number">-1</span>]+c));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,f[a.size()][b.size()]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;编辑距离-dist&quot;&gt;&lt;a href=&quot;#编辑距离-dist&quot; class=&quot;headerlink&quot; title=&quot;编辑距离(dist)&quot;&gt;&lt;/a&gt;编辑距离(dist)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;编辑距离是指两个字串之间,由一个转成另一个所需的最少编辑操作次数,允许的编辑操作包括:将一个字符替换成另一个字符,插入一个字符,删除一个字符.给出两个字符串s1和s2,找出它们之间的编辑距离,即由字符串s1最少经过多少步操作变成字符串s2.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>Fib之奇偶性</title>
    <link href="https://y_m.coding.me//2016/1005/fibs/"/>
    <id>https://y_m.coding.me//2016/1005/fibs/</id>
    <published>2016-10-05T04:47:19.000Z</published>
    <updated>2018-07-09T12:12:40.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Fib之奇偶性-fibs"><a href="#Fib之奇偶性-fibs" class="headerlink" title="Fib之奇偶性(fibs)"></a>Fib之奇偶性(fibs)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>Fibonacci数列大家都已经很熟悉了:f(0)=0,f(1)=1, f(n)=f(n-1)+f(n-2) n≥2.给定正整数n,判别数列第n项的奇偶性.</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行为正整数t(≤100),表示数据组数;接下来t行,每行一个正整数n(≤108).</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>输出第n项Fibonacci数列的奇偶性,如果为奇数则请输出“ODD”,否则为“EVEN”.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>fibs.in</th><th>fibs.out</th></tr></thead><tbody><tr><td>3</td><td>ODD</td></tr><tr><td>1</td><td>ODD</td></tr><tr><td>2</td><td>EVEN</td></tr><tr><td>3</td><td></td></tr></tbody></table><ul><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t,n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">freopen(<span class="string">"fibs.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"fibs.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">n%=<span class="number">3</span>;</span><br><span class="line"><span class="keyword">if</span>(!n)</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"EVEN"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"ODD"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Fib之奇偶性-fibs&quot;&gt;&lt;a href=&quot;#Fib之奇偶性-fibs&quot; class=&quot;headerlink&quot; title=&quot;Fib之奇偶性(fibs)&quot;&gt;&lt;/a&gt;Fib之奇偶性(fibs)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Fibonacci数列大家都已经很熟悉了:f(0)=0,f(1)=1, f(n)=f(n-1)+f(n-2) n≥2.给定正整数n,判别数列第n项的奇偶性.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>表彰</title>
    <link href="https://y_m.coding.me//2016/1004/commend/"/>
    <id>https://y_m.coding.me//2016/1004/commend/</id>
    <published>2016-10-04T08:13:11.000Z</published>
    <updated>2018-07-09T12:12:40.200Z</updated>
    
    <content type="html"><![CDATA[<h1 id="表彰-commend"><a href="#表彰-commend" class="headerlink" title="表彰(commend)"></a>表彰(commend)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>轰炸取得了圆满成功,YJC 决定对飞行员们进行表彰,并选出一名飞行王者.一共有m 名飞行员参加了轰炸,C 国一共有 n 个飞行大队,第 i 个飞行大队认为第 j 个飞行员应该成为飞行王者的人数为 ai,j.对于每一个飞行大队,在这个大队得票最高的飞行员叫做这个大队选择的飞行王者,如果有多个取编号最小的那一个.被最多大队选择的飞行员就是飞行王者,同样如果有多个取编号最小的那一个.现在 YJC 想知道,飞行王者究竟是几号飞行员?</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行包含两个整数 n 和 m,表示飞行大队的个数和飞行员的个数.<br>接下来 n 行每行包含 m 个整数,第(i+1)行第 j 个整数 ai,j 表示第 i 个飞行大队认为第 j个飞行员应该成为飞行王者的人数.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行,包含一个整数,表示飞行王者是几号飞行员.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>commend.in</th><th>commend.out</th></tr></thead><tbody><tr><td>2 2</td><td>1</td></tr><tr><td>2 2</td><td></td></tr><tr><td>1 2</td><td></td></tr></tbody></table><ul><li><h3 id="样例解释"><a href="#样例解释" class="headerlink" title="[样例解释]"></a>[样例解释]</h3><blockquote><p>在 1 大队,飞行员 1 得到 2 票,飞行员 2 同样得到 2 票,但飞行员 1 编号小,所以 1大队选择飞行员 1 成为飞行王者.<br>在 2 大队,飞行员 1 得到 1 票,飞行员 2 得到 2 票,所以 2 大队选择飞行员 2 成为飞行王者.<br>飞行员 1 被 1 个大队选择,飞行员 2 同样被 1 个大队选择,但飞行员 1 编号小,所以飞行员 1 成为飞行王者.</p></blockquote></li><li><h3 id="数据说明"><a href="#数据说明" class="headerlink" title="[数据说明]"></a>[数据说明]</h3><blockquote><p>对于 100%的数据,满足 2≤n,m≤50,0≤ai,j≤109.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">54</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[N][N],bin[N];</span><br><span class="line"><span class="keyword">int</span> mx,mxi;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"commend.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"commend.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        mx=mxi=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">            <span class="keyword">if</span>(a[i][j]&gt;mx)</span><br><span class="line">            &#123;</span><br><span class="line">                mx=a[i][j];</span><br><span class="line">                mxi=j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        bin[mxi]++;</span><br><span class="line">    &#125;</span><br><span class="line">    mx=mxi=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(bin[i]&gt;mx)</span><br><span class="line">        &#123;</span><br><span class="line">            mx=bin[i];</span><br><span class="line">            mxi=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,mxi);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;表彰-commend&quot;&gt;&lt;a href=&quot;#表彰-commend&quot; class=&quot;headerlink&quot; title=&quot;表彰(commend)&quot;&gt;&lt;/a&gt;表彰(commend)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;轰炸取得了圆满成功,YJC 决定对飞行员们进行表彰,并选出一名飞行王者.一共有m 名飞行员参加了轰炸,C 国一共有 n 个飞行大队,第 i 个飞行大队认为第 j 个飞行员应该成为飞行王者的人数为 ai,j.对于每一个飞行大队,在这个大队得票最高的飞行员叫做这个大队选择的飞行王者,如果有多个取编号最小的那一个.被最多大队选择的飞行员就是飞行王者,同样如果有多个取编号最小的那一个.现在 YJC 想知道,飞行王者究竟是几号飞行员?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>轰炸</title>
    <link href="https://y_m.coding.me//2016/1004/bomb/"/>
    <id>https://y_m.coding.me//2016/1004/bomb/</id>
    <published>2016-10-04T06:49:07.000Z</published>
    <updated>2018-07-09T12:12:40.199Z</updated>
    
    <content type="html"><![CDATA[<h1 id="轰炸-bomb"><a href="#轰炸-bomb" class="headerlink" title="轰炸(bomb)"></a>轰炸(bomb)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>C 国和 W 国爆发了战争!YJC 决定对 W 国的 n 个城市进行轰炸.每个城市都有一个重要度 ai.设 xi=重要度大于 ai的城市数+1,那么第 i 个城市就是第 xi个被轰炸的城市.显然这样能保证重要度大的城市先被轰炸,重要度相同的城市同时被轰炸.现在 YJC 想知道,对于每一个 i,xi等于多少?</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行包含一个整数 n,表示城市个数.<br>第二行包含 n 个整数,第 i 个整数 ai表示第 i 个城市的重要度.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行,包含 n 个整数,第 i 个整数 xi表示第 i 个城市是第几个被轰炸的城市.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>bomb.in</th><th>bomb.out</th></tr></thead><tbody><tr><td>5</td><td>1 3 1 3 3</td></tr><tr><td>3 1 3 1 1</td><td></td></tr></tbody></table><ul><li><h3 id="数据说明"><a href="#数据说明" class="headerlink" title="[数据说明]"></a>[数据说明]</h3><blockquote><p>对于 100%的数据,满足 1≤n≤2000,1≤ai≤109.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"iostream"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"algorithm"</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2004</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">2147483647</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">City</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id,ip;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">&#125;a[N];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (City a,City b)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> a.ip&gt;b.ip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &gt; (City a,City b)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> a.id&lt;b.id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"bomb.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"bomb.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i].ip);</span><br><span class="line">        a[i].id=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n,less&lt;City&gt;());</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    a[<span class="number">0</span>].ip=-INF;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].ip!=a[i<span class="number">-1</span>].ip)</span><br><span class="line">            cnt=i;</span><br><span class="line">        a[i].x=cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n,greater&lt;City&gt;());</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i].x);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;轰炸-bomb&quot;&gt;&lt;a href=&quot;#轰炸-bomb&quot; class=&quot;headerlink&quot; title=&quot;轰炸(bomb)&quot;&gt;&lt;/a&gt;轰炸(bomb)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;C 国和 W 国爆发了战争!YJC 决定对 W 国的 n 个城市进行轰炸.每个城市都有一个重要度 ai.设 xi=重要度大于 ai的城市数+1,那么第 i 个城市就是第 xi个被轰炸的城市.显然这样能保证重要度大的城市先被轰炸,重要度相同的城市同时被轰炸.现在 YJC 想知道,对于每一个 i,xi等于多少?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>图论</title>
    <link href="https://y_m.coding.me//graph/"/>
    <id>https://y_m.coding.me//graph/</id>
    <published>2016-10-04T03:15:19.000Z</published>
    <updated>2017-09-09T11:15:34.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h1><hr><a id="more"></a><ul><li><h2 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h2></li><li><h3 id="邻接矩阵"><a href="#邻接矩阵" class="headerlink" title="邻接矩阵"></a>邻接矩阵</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从u到v有一条权值为w的边</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    G[a][b]=c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h3 id="邻接表"><a href="#邻接表" class="headerlink" title="邻接表"></a>邻接表</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 从u到v有一条权值为w的边</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> v,<span class="keyword">int</span> w)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tnt++;</span><br><span class="line">    weight[tnt]=a;</span><br><span class="line">    edge[tnt]=j;</span><br><span class="line">    next[tnt]=head[i];</span><br><span class="line">    head[i]=tnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h2 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h2><p>&lt;!–</p></li><li><h3 id="深度优先"><a href="#深度优先" class="headerlink" title="深度优先"></a>深度优先</h3></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DFS</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h3 id="广度优先"><a href="#广度优先" class="headerlink" title="广度优先"></a>广度优先</h3></li></ul><p><code>`</code>c++<br>void BFS()<br>{</p><p>}<br><code>`</code> –&gt;</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;图论&quot;&gt;&lt;a href=&quot;#图论&quot; class=&quot;headerlink&quot; title=&quot;图论&quot;&gt;&lt;/a&gt;图论&lt;/h1&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="algorithm" scheme="https://y_m.coding.me/categories/algorithm/"/>
    
    
      <category term="snippets" scheme="https://y_m.coding.me/tags/snippets/"/>
    
  </entry>
  
  <entry>
    <title>快速幂</title>
    <link href="https://y_m.coding.me//quickpower/"/>
    <id>https://y_m.coding.me//quickpower/</id>
    <published>2016-10-03T13:14:00.000Z</published>
    <updated>2017-09-09T11:15:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ab-mod-c"><a href="#ab-mod-c" class="headerlink" title="ab mod c"></a>a<sup>b</sup> mod c</h1><hr><a id="more"></a><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">QuickPower</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">    a=a%c;</span><br><span class="line">    <span class="keyword">while</span>(b&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>)</span><br><span class="line">            cnt=(cnt*a)%c;</span><br><span class="line">        b/=<span class="number">2</span>;</span><br><span class="line">        a=(a*a)%c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;ab-mod-c&quot;&gt;&lt;a href=&quot;#ab-mod-c&quot; class=&quot;headerlink&quot; title=&quot;ab mod c&quot;&gt;&lt;/a&gt;a&lt;sup&gt;b&lt;/sup&gt; mod c&lt;/h1&gt;&lt;hr&gt;
    
    </summary>
    
      <category term="algorithm" scheme="https://y_m.coding.me/categories/algorithm/"/>
    
    
      <category term="snippets" scheme="https://y_m.coding.me/tags/snippets/"/>
    
  </entry>
  
  <entry>
    <title>序列</title>
    <link href="https://y_m.coding.me//2016/1003/seq/"/>
    <id>https://y_m.coding.me//2016/1003/seq/</id>
    <published>2016-10-03T12:31:48.000Z</published>
    <updated>2018-07-09T12:12:40.212Z</updated>
    
    <content type="html"><![CDATA[<h1 id="序列-seq"><a href="#序列-seq" class="headerlink" title="序列(seq)"></a>序列(seq)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="描述"><a href="#描述" class="headerlink" title="[描述]"></a>[描述]</h3><blockquote><p>我们按以下方式产生序列:<br>1, 开始时序列是: “O” ;<br>2, 每一次变化把序列中的 “O” 变成 “OI” ,”I” 变成 “O”.<br>经过无限次变化,我们得到序列”OIOOIOIOOIOOIOIOOIO….”.<br>总共有 Q个询问,每次询问为:在区间[a,b]之间有多少个”O”.<br>请写一个程序回答Q个询问</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行为一个整数Q;<br>接下来有Q行,每行两个数用空格隔开的整数a, b.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>共Q行,每行一个回答.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>seq.in</th><th>seq.out</th></tr></thead><tbody><tr><td>1</td><td>4</td></tr></tbody></table><p>2 8</p><ul><li><h3 id="数据范围"><a href="#数据范围" class="headerlink" title="[数据范围]"></a>[数据范围]</h3><blockquote><p>100%的数据: 1≤Q≤5000,1≤a≤b&lt;2^63.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">92</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> x[N+<span class="number">4</span>],y[N+<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">find</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">        <span class="keyword">if</span>(x[i]&gt;=a)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span>(a==x[i])</span><br><span class="line">        <span class="keyword">return</span> y[i];</span><br><span class="line">    <span class="keyword">return</span> y[i<span class="number">-1</span>]+find(a-x[i<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"seq.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"seq.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    x[<span class="number">1</span>]=<span class="number">1</span>;x[<span class="number">2</span>]=<span class="number">2</span>;</span><br><span class="line">    y[<span class="number">1</span>]=y[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=N;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        x[i]=x[i<span class="number">-1</span>]+x[i<span class="number">-2</span>];</span><br><span class="line">        y[i]=y[i<span class="number">-1</span>]+y[i<span class="number">-2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> a,b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;a,&amp;b);</span><br><span class="line">        <span class="keyword">long</span> <span class="keyword">long</span> ans=find(b)-find(a<span class="number">-1</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;序列-seq&quot;&gt;&lt;a href=&quot;#序列-seq&quot; class=&quot;headerlink&quot; title=&quot;序列(seq)&quot;&gt;&lt;/a&gt;序列(seq)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;描述&quot;&gt;&lt;a href=&quot;#描述&quot; class=&quot;headerlink&quot; title=&quot;[描述]&quot;&gt;&lt;/a&gt;[描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;我们按以下方式产生序列:&lt;br&gt;1, 开始时序列是: “O” ;&lt;br&gt;2, 每一次变化把序列中的 “O” 变成 “OI” ,”I” 变成 “O”.&lt;br&gt;经过无限次变化,我们得到序列”OIOOIOIOOIOOIOIOOIO….”.&lt;br&gt;总共有 Q个询问,每次询问为:在区间[a,b]之间有多少个”O”.&lt;br&gt;请写一个程序回答Q个询问&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>国际象棋</title>
    <link href="https://y_m.coding.me//2016/1003/chess/"/>
    <id>https://y_m.coding.me//2016/1003/chess/</id>
    <published>2016-10-03T08:10:59.000Z</published>
    <updated>2018-07-09T12:12:40.206Z</updated>
    
    <content type="html"><![CDATA[<h1 id="国际象棋-chess"><a href="#国际象棋-chess" class="headerlink" title="国际象棋(chess)"></a>国际象棋(chess)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>YJC 想学习国际象棋,但他连个子怎么走都不会.所以他决定练习怎么走子.<br>YJC 有一块 n*m 的棋盘,他在上面摆了若干个皇后,皇后可以走到同一行,同一列,同一条对角线上的任意一个格子.现在他想知道:有多少个格子满足上面有皇后或者可以被某个皇后走到?</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行包含两个整数 n 和 m,表示棋盘的行数和列数.<br>接下来 n 行每行包含 m 个字符,第(i+1)行第 j 个字符如果是’.’表示上面没有放皇后,如果是’X’表示上面放了皇后.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行,包含一个整数,表示有多少个格子满足上面有皇后或者可以被某个皇后走到.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>chess.in</th><th>chess.out</th></tr></thead><tbody><tr><td>2 2</td><td>4</td></tr><tr><td>.X</td><td></td></tr><tr><td>X.</td><td></td></tr></tbody></table><ul><li><h3 id="数据说明"><a href="#数据说明" class="headerlink" title="[数据说明]"></a>[数据说明]</h3><blockquote><p>对于 100%的数据,满足 2≤n,m≤50.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">54</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">bool</span> <span class="built_in">map</span>[N][N];</span><br><span class="line"><span class="keyword">int</span> tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"chess.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"chess.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d\n"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">char</span> c=getchar();</span><br><span class="line">            <span class="keyword">if</span>(c==<span class="string">'X'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> jj=<span class="number">1</span>;jj&lt;=m;jj++)</span><br><span class="line">                    <span class="built_in">map</span>[i][jj]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> ii=<span class="number">1</span>;ii&lt;=n;ii++)</span><br><span class="line">                    <span class="built_in">map</span>[ii][j]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> ii=i,jj=j;ii&gt;=<span class="number">1</span> <span class="keyword">and</span> jj&gt;=<span class="number">1</span>;ii--,jj--)</span><br><span class="line">                    <span class="built_in">map</span>[ii][jj]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> ii=i,jj=j;ii&lt;=n <span class="keyword">and</span> jj&lt;=m;ii++,jj++)</span><br><span class="line">                    <span class="built_in">map</span>[ii][jj]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> ii=i,jj=j;ii&gt;=<span class="number">1</span> <span class="keyword">and</span> jj&lt;=m;ii--,jj++)</span><br><span class="line">                    <span class="built_in">map</span>[ii][jj]=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> ii=i,jj=j;ii&lt;=n <span class="keyword">and</span> jj&gt;=<span class="number">1</span>;ii++,jj--)</span><br><span class="line">                    <span class="built_in">map</span>[ii][jj]=<span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">            tot+=<span class="built_in">map</span>[i][j];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,tot);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;国际象棋-chess&quot;&gt;&lt;a href=&quot;#国际象棋-chess&quot; class=&quot;headerlink&quot; title=&quot;国际象棋(chess)&quot;&gt;&lt;/a&gt;国际象棋(chess)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;YJC 想学习国际象棋,但他连个子怎么走都不会.所以他决定练习怎么走子.&lt;br&gt;YJC 有一块 n*m 的棋盘,他在上面摆了若干个皇后,皇后可以走到同一行,同一列,同一条对角线上的任意一个格子.现在他想知道:有多少个格子满足上面有皇后或者可以被某个皇后走到?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
  <entry>
    <title>幂</title>
    <link href="https://y_m.coding.me//2016/1003/power/"/>
    <id>https://y_m.coding.me//2016/1003/power/</id>
    <published>2016-10-03T06:36:02.000Z</published>
    <updated>2018-07-09T12:12:40.203Z</updated>
    
    <content type="html"><![CDATA[<h1 id="幂-power"><a href="#幂-power" class="headerlink" title="幂(power)"></a>幂(power)</h1><hr><ul><li><h2 id="问题"><a href="#问题" class="headerlink" title="[问题]"></a>[问题]</h2></li><li><h3 id="问题描述"><a href="#问题描述" class="headerlink" title="[问题描述]"></a>[问题描述]</h3><blockquote><p>YJC 想学习幂级数,但他连幂是什么都不知道.所以他想向你请教:在[L,R]中有多少个数是 n 的整数次幂?</p></blockquote></li></ul><a id="more"></a><ul><li><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="[输入格式]"></a>[输入格式]</h3><blockquote><p>第一行包含三个整数 L,R 和 n,意思如题所示.</p></blockquote></li><li><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="[输出格式]"></a>[输出格式]</h3><blockquote><p>一行,包含一个整数,表示在[L,R]中有多少个数是 n 的整数次幂.</p></blockquote></li><li><h3 id="样例"><a href="#样例" class="headerlink" title="[样例]"></a>[样例]</h3></li></ul><table><thead><tr><th>power.in</th><th>power.out</th></tr></thead><tbody><tr><td>1 10 2</td><td>4</td></tr></tbody></table><ul><li><h3 id="数据说明"><a href="#数据说明" class="headerlink" title="[数据说明]"></a>[数据说明]</h3><blockquote><p>对于 100%的数据,满足 1≤L≤R≤10<sup>9</sup>,2≤n≤10<sup>9</sup>.</p></blockquote></li><li><h2 id="代码"><a href="#代码" class="headerlink" title="[代码]"></a>[代码]</h2></li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"stdio.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> l,r,tot;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> cnt=<span class="number">1</span>,n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ONLINE_JUDGE</span></span><br><span class="line">    freopen(<span class="string">"power.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">    freopen(<span class="string">"power.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d%lld"</span>,&amp;l,&amp;r,&amp;n);</span><br><span class="line">    <span class="keyword">while</span>(cnt&lt;l)</span><br><span class="line">        cnt*=n;</span><br><span class="line">    <span class="keyword">while</span>(cnt&lt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        tot++;</span><br><span class="line">        cnt*=n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,tot);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;幂-power&quot;&gt;&lt;a href=&quot;#幂-power&quot; class=&quot;headerlink&quot; title=&quot;幂(power)&quot;&gt;&lt;/a&gt;幂(power)&lt;/h1&gt;&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;[问题]&quot;&gt;&lt;/a&gt;[问题]&lt;/h2&gt;&lt;/li&gt;
&lt;li&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;[问题描述]&quot;&gt;&lt;/a&gt;[问题描述]&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;YJC 想学习幂级数,但他连幂是什么都不知道.所以他想向你请教:在[L,R]中有多少个数是 n 的整数次幂?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="daily" scheme="https://y_m.coding.me/categories/daily/"/>
    
    
      <category term="2016" scheme="https://y_m.coding.me/tags/2016/"/>
    
  </entry>
  
</feed>
